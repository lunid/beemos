<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a10" title="">
  <file path="Form.php" hash="d80b5b62791390527965c425fa2c99ad" package="Default">
    <class final="false" abstract="false" namespace="app\lib\ecomm" line="8" package="Default">
      <extends/>
      <name>Form</name>
      <full_name>\app\lib\ecomm\Form</full_name>
      <docblock line="5">
        <description><![CDATA[Minha classe Form]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="app\lib\ecomm" line="12" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="9">
          <description><![CDATA[Teste de Form]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Form.php</error>
    </parse_markers>
  </file>
  <file path="index.php" hash="9e0884bf0b9977377e41381c6ac027a2" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file index.php</error>
    </parse_markers>
  </file>
  <file path="index_old.php" hash="718eb3011fd1582ad55f1d0869a21eb6" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file index_old.php</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\config.php" hash="e92f7b85096fa6c0837e9af5bcd11a5e" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\config.php</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\Auth.php" hash="e3c4af817ffb04a95b9a4e45d6d49c78" package="Default">
    <include line="81" type="Include" package="Default">
      <name/>
    </include>
    <include line="97" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="98" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="100" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="102" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="104" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="105" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="106" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="107" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="109" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="110" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="111" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="112" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="15" package="Default">
      <extends/>
      <name>Hybrid_Auth</name>
      <full_name>\Hybrid_Auth</full_name>
      <docblock line="8">
        <description><![CDATA[Hybrid_Auth class]]></description>
        <long-description><![CDATA[<p>Hybrid_Auth class provide a simple way to authenticate users via OpenID and OAuth.</p>

<p>Generally, Hybrid_Auth is the only class you should instanciate and use throughout your application.</p>]]></long-description>
      </docblock>
      <property final="false" static="true" visibility="public" line="17" namespace="global" package="Default">
        <name>$version</name>
        <default><![CDATA["2.0.11-dev"]]></default>
      </property>
      <property final="false" static="true" visibility="public" line="19" namespace="global" package="Default">
        <name>$config</name>
        <default><![CDATA[array()]]></default>
      </property>
      <property final="false" static="true" visibility="public" line="21" namespace="global" package="Default">
        <name>$store</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="true" visibility="public" line="23" namespace="global" package="Default">
        <name>$error</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="true" visibility="public" line="25" namespace="global" package="Default">
        <name>$logger</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="29">
          <description><![CDATA[Try to start a new session of none then initialize Hybrid_Auth]]></description>
          <long-description><![CDATA[<p>Hybrid_Auth constructor will require either a valid config array or
a path for a configuration file as parameter. To know more please
refer to the Configuration section:
http://hybridauth.sourceforge.net/userguide/Configuration.html</p>]]></long-description>
        </docblock>
        <argument line="37">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="70" package="Default">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="67">
          <description><![CDATA[Try to initialize Hybrid_Auth with given $config hash or file]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="70">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="171" package="Default">
        <name>storage</name>
        <full_name>storage</full_name>
        <docblock line="164">
          <description><![CDATA[Hybrid storage system accessor]]></description>
          <long-description><![CDATA[<p>Users sessions are stored using HybridAuth storage system ( HybridAuth 2.0 handle PHP Session only) and can be acessed directly by
Hybrid_Auth::storage()->get($key) to retrieves the data for the given key, or calling
Hybrid_Auth::storage()->set($key, $value) to store the key => $value set.</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="181" package="Default">
        <name>getSessionData</name>
        <full_name>getSessionData</full_name>
        <docblock line="178">
          <description><![CDATA[Get hybridauth session data.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="191" package="Default">
        <name>restoreSessionData</name>
        <full_name>restoreSessionData</full_name>
        <docblock line="188">
          <description><![CDATA[restore hybridauth session data.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="191">
          <name>$sessiondata</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="210" package="Default">
        <name>authenticate</name>
        <full_name>authenticate</full_name>
        <docblock line="198">
          <description><![CDATA[Try to authenticate the user with a given provider.]]></description>
          <long-description><![CDATA[<p>If the user is already connected we just return and instance of provider adapter,
ELSE, try to authenticate and authorize the user with the provider.</p>

<p>$params is generally an array with required info in order for this provider and HybridAuth to work,
 like :
         hauth_return_to: URL to call back after authentication is done
       openid_identifier: The OpenID identity provider identifier
          google_service: can be "Users" for Google user accounts service or "Apps" for Google hosted Apps</p>]]></long-description>
        </docblock>
        <argument line="210">
          <name>$providerId</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="210">
          <name>$params</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="236" package="Default">
        <name>getAdapter</name>
        <full_name>getAdapter</full_name>
        <docblock line="233">
          <description><![CDATA[Return the adapter instance for an authenticated provider]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="236">
          <name>$providerId</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="248" package="Default">
        <name>setup</name>
        <full_name>setup</full_name>
        <docblock line="245">
          <description><![CDATA[Setup an adapter for a given provider]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="248">
          <name>$providerId</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="248">
          <name>$params</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="283" package="Default">
        <name>isConnectedWith</name>
        <full_name>isConnectedWith</full_name>
        <docblock line="280">
          <description><![CDATA[Check if the current user is connected to a given provider]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="283">
          <name>$providerId</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="293" package="Default">
        <name>getConnectedProviders</name>
        <full_name>getConnectedProviders</full_name>
        <docblock line="290">
          <description><![CDATA[Return array listing all authenticated providers]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="311" package="Default">
        <name>getProviders</name>
        <full_name>getProviders</full_name>
        <docblock line="308">
          <description><![CDATA[Return array listing all enabled providers as well as a flag if you are connected.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="333" package="Default">
        <name>logoutAllProviders</name>
        <full_name>logoutAllProviders</full_name>
        <docblock line="330">
          <description><![CDATA[A generic function to logout all connected provider at once]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="349" package="Default">
        <name>redirect</name>
        <full_name>redirect</full_name>
        <docblock line="346">
          <description><![CDATA[Utility function, redirect to a given URL with php header or using javascript location.href]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="349">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="349">
          <name>$mode</name>
          <default><![CDATA["PHP"]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="377" package="Default">
        <name>getCurrentUrl</name>
        <full_name>getCurrentUrl</full_name>
        <docblock line="374">
          <description><![CDATA[Utility function, return the current url.]]></description>
          <long-description><![CDATA[<p>TRUE to get $_SERVER['REQUEST_URI'], FALSE for $_SERVER['PHP_SELF']</p>]]></long-description>
        </docblock>
        <argument line="377">
          <name>$request_uri</name>
          <default><![CDATA[true]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\Auth.php</error>
      <error line="17" code="50018">No DocBlock was found for property $version</error>
      <error line="19" code="50018">No DocBlock was found for property $config</error>
      <error line="21" code="50018">No DocBlock was found for property $store</error>
      <error line="23" code="50018">No DocBlock was found for property $error</error>
      <error line="25" code="50018">No DocBlock was found for property $logger</error>
      <error line="29" code="50015">Argument $config is missing from the Docblock of __construct()</error>
      <error line="67" code="50015">Argument $config is missing from the Docblock of initialize()</error>
      <error line="188" code="50015">Argument $sessiondata is missing from the Docblock of restoreSessionData()</error>
      <error line="198" code="50015">Argument $providerId is missing from the Docblock of authenticate()</error>
      <error line="198" code="50015">Argument $params is missing from the Docblock of authenticate()</error>
      <error line="233" code="50015">Argument $providerId is missing from the Docblock of getAdapter()</error>
      <error line="245" code="50015">Argument $providerId is missing from the Docblock of setup()</error>
      <error line="245" code="50015">Argument $params is missing from the Docblock of setup()</error>
      <error line="280" code="50015">Argument $providerId is missing from the Docblock of isConnectedWith()</error>
      <error line="346" code="50015">Argument $url is missing from the Docblock of redirect()</error>
      <error line="346" code="50015">Argument $mode is missing from the Docblock of redirect()</error>
      <error line="374" code="50015">Argument $request_uri is missing from the Docblock of getCurrentUrl()</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\Endpoint.php" hash="42a131a1666c94b9ef7cc62f09943432" package="Default">
    <class final="false" abstract="false" namespace="global" line="13" package="Default">
      <extends/>
      <name>Hybrid_Endpoint</name>
      <full_name>\Hybrid_Endpoint</full_name>
      <docblock line="8">
        <description><![CDATA[Hybrid_Endpoint class]]></description>
        <long-description><![CDATA[<p>Hybrid_Endpoint class provides a simple way to handle the OpenID and OAuth endpoint.</p>]]></long-description>
      </docblock>
      <property final="false" static="true" visibility="public" line="14" namespace="global" package="Default">
        <name>$request</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="true" visibility="public" line="15" namespace="global" package="Default">
        <name>$initDone</name>
        <default><![CDATA[FALSE]]></default>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="22" package="Default">
        <name>process</name>
        <full_name>process</full_name>
        <docblock line="17">
          <description><![CDATA[Process the current request]]></description>
          <long-description><![CDATA[<p>$request - The current request parameters. Leave as NULL to default to use $_REQUEST.</p>]]></long-description>
        </docblock>
        <argument line="22">
          <name>$request</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="72" package="Default">
        <name>processWindowsLiveChannel</name>
        <full_name>processWindowsLiveChannel</full_name>
        <docblock line="69">
          <description><![CDATA[Process Windows Live channel request]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="82" package="Default">
        <name>processOpenidPolicy</name>
        <full_name>processOpenidPolicy</full_name>
        <docblock line="79">
          <description><![CDATA[Process OpenID policy request]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="92" package="Default">
        <name>processOpenidXRDS</name>
        <full_name>processOpenidXRDS</full_name>
        <docblock line="89">
          <description><![CDATA[Process OpenID XRDS request]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="112" package="Default">
        <name>processOpenidRealm</name>
        <full_name>processOpenidRealm</full_name>
        <docblock line="109">
          <description><![CDATA[Process OpenID realm request]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="127" package="Default">
        <name>processAuthStart</name>
        <full_name>processAuthStart</full_name>
        <docblock line="124">
          <description><![CDATA[define:endpoint step 3.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="170" package="Default">
        <name>processAuthDone</name>
        <full_name>processAuthDone</full_name>
        <docblock line="167">
          <description><![CDATA[define:endpoint step 3.1 and 3.2]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="205" package="Default">
        <name>authInit</name>
        <full_name>authInit</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\Endpoint.php</error>
      <error line="14" code="50018">No DocBlock was found for property $request</error>
      <error line="15" code="50018">No DocBlock was found for property $initDone</error>
      <error line="17" code="50015">Argument $request is missing from the Docblock of process()</error>
      <error line="205" code="50010">No DocBlock was found for method authInit()</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\Error.php" hash="0fc6956d17f4fd94277a9057d0e6d47f" package="Default">
    <class final="false" abstract="false" namespace="global" line="13" package="Default">
      <extends/>
      <name>Hybrid_Error</name>
      <full_name>\Hybrid_Error</full_name>
      <docblock line="8">
        <description><![CDATA[Errors manager]]></description>
        <long-description><![CDATA[<p>HybridAuth errors are stored in Hybrid::storage() and not displayed directly to the end user</p>]]></long-description>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="18" package="Default">
        <name>setError</name>
        <full_name>setError</full_name>
        <docblock line="15">
          <description><![CDATA[store error in session]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="18">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="18">
          <name>$code</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="18">
          <name>$trace</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="18">
          <name>$previous</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="32" package="Default">
        <name>clearError</name>
        <full_name>clearError</full_name>
        <docblock line="29">
          <description><![CDATA[clear the last error]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="48" package="Default">
        <name>hasError</name>
        <full_name>hasError</full_name>
        <docblock line="43">
          <description><![CDATA[Checks to see if there is a an error.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="return" description="True if there is an error." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="56" package="Default">
        <name>getErrorMessage</name>
        <full_name>getErrorMessage</full_name>
        <docblock line="53">
          <description><![CDATA[return error message]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="64" package="Default">
        <name>getErrorCode</name>
        <full_name>getErrorCode</full_name>
        <docblock line="61">
          <description><![CDATA[return error code]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="72" package="Default">
        <name>getErrorTrace</name>
        <full_name>getErrorTrace</full_name>
        <docblock line="69">
          <description><![CDATA[return string detailled error backtrace as string.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="80" package="Default">
        <name>getErrorPrevious</name>
        <full_name>getErrorPrevious</full_name>
        <docblock line="77">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="77" name="return" description="detailled error backtrace as string." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\Error.php</error>
      <error line="15" code="50015">Argument $message is missing from the Docblock of setError()</error>
      <error line="15" code="50015">Argument $code is missing from the Docblock of setError()</error>
      <error line="15" code="50015">Argument $trace is missing from the Docblock of setError()</error>
      <error line="15" code="50015">Argument $previous is missing from the Docblock of setError()</error>
      <error line="77" code="50012">No short description for method getErrorPrevious()</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\Logger.php" hash="416ccf0ceb9c40761abc91e9cbfb700f" package="Default">
    <class final="false" abstract="false" namespace="global" line="11" package="Default">
      <extends/>
      <name>Hybrid_Logger</name>
      <full_name>\Hybrid_Logger</full_name>
      <docblock line="8">
        <description><![CDATA[Debugging and Logging manager]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="13" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="27" package="Default">
        <name>debug</name>
        <full_name>debug</full_name>
        <argument line="27">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="27">
          <name>$object</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="41" package="Default">
        <name>info</name>
        <full_name>info</full_name>
        <argument line="41">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="55" package="Default">
        <name>error</name>
        <full_name>error</full_name>
        <argument line="55">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="55">
          <name>$object</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\Logger.php</error>
      <error line="13" code="50010">No DocBlock was found for method __construct()</error>
      <error line="27" code="50010">No DocBlock was found for method debug()</error>
      <error line="41" code="50010">No DocBlock was found for method info()</error>
      <error line="55" code="50010">No DocBlock was found for method error()</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\Providers\AOL.php" hash="da41efe88c990cdd916fdbe85079164f" package="Default">
    <class final="false" abstract="false" namespace="global" line="13" package="Default">
      <extends>\Hybrid_Provider_Model_OpenID</extends>
      <name>Hybrid_Providers_AOL</name>
      <full_name>\Hybrid_Providers_AOL</full_name>
      <docblock line="8">
        <description><![CDATA[Hybrid_Providers_AOL provider adapter based on OpenID protocol]]></description>
        <long-description><![CDATA[<p>http://hybridauth.sourceforge.net/userguide/IDProvider_info_AOL.html</p>]]></long-description>
      </docblock>
      <property final="false" static="false" visibility="public" line="15" namespace="global" package="Default">
        <name>$openidIdentifier</name>
        <default><![CDATA["http://openid.aol.com/"]]></default>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\Providers\AOL.php</error>
      <error line="15" code="50018">No DocBlock was found for property $openidIdentifier</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\Providers\Facebook.php" hash="a2d36abb9c1e34e6c3c608db51628f22" package="Default">
    <include line="42" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="43" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="15" package="Default">
      <extends>\Hybrid_Provider_Model</extends>
      <name>Hybrid_Providers_Facebook</name>
      <full_name>\Hybrid_Providers_Facebook</full_name>
      <docblock line="8">
        <description><![CDATA[Hybrid_Providers_Facebook provider adapter based on OAuth2 protocol]]></description>
        <long-description><![CDATA[<p>Hybrid_Providers_Facebook use the Facebook PHP SDK created by Facebook</p>

<p>http://hybridauth.sourceforge.net/userguide/IDProvider_info_Facebook.html</p>]]></long-description>
      </docblock>
      <property final="false" static="false" visibility="public" line="18" namespace="global" package="Default">
        <name>$scope</name>
        <default><![CDATA["email, user_about_me, user_birthday, user_hometown, user_website, offline_access, read_stream, publish_stream, read_friendlists"]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="20" namespace="global" package="Default">
        <name>$display</name>
        <default><![CDATA["page"]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="25" package="Default">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="22">
          <description><![CDATA[IDp wrappers initializer]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="56" package="Default">
        <name>loginBegin</name>
        <full_name>loginBegin</full_name>
        <docblock line="51">
          <description><![CDATA[begin login step]]></description>
          <long-description><![CDATA[<p>simply call Facebook::require_login().</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="68" package="Default">
        <name>loginFinish</name>
        <full_name>loginFinish</full_name>
        <docblock line="65">
          <description><![CDATA[finish login step]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="92" package="Default">
        <name>logout</name>
        <full_name>logout</full_name>
        <docblock line="89">
          <description><![CDATA[logout]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="102" package="Default">
        <name>getUserProfile</name>
        <full_name>getUserProfile</full_name>
        <docblock line="99">
          <description><![CDATA[load the user profile from the IDp api client]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="145" package="Default">
        <name>getUserContacts</name>
        <full_name>getUserContacts</full_name>
        <docblock line="142">
          <description><![CDATA[load the user contacts]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="177" package="Default">
        <name>setUserStatus</name>
        <full_name>setUserStatus</full_name>
        <docblock line="174">
          <description><![CDATA[update user status]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="177">
          <name>$status</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="201" package="Default">
        <name>getUserActivity</name>
        <full_name>getUserActivity</full_name>
        <docblock line="196">
          <description><![CDATA[load the user latest activity
   - timeline : all the stream
   - me       : the user activity only]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="201">
          <name>$stream</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\Providers\Facebook.php</error>
      <error line="18" code="50018">No DocBlock was found for property $scope</error>
      <error line="20" code="50018">No DocBlock was found for property $display</error>
      <error line="174" code="50015">Argument $status is missing from the Docblock of setUserStatus()</error>
      <error line="196" code="50015">Argument $stream is missing from the Docblock of getUserActivity()</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\Providers\Foursquare.php" hash="7e863dff8fd0379f63c9034ca7793a1f" package="Default">
    <class final="false" abstract="false" namespace="global" line="13" package="Default">
      <extends>\Hybrid_Provider_Model_OAuth2</extends>
      <name>Hybrid_Providers_Foursquare</name>
      <full_name>\Hybrid_Providers_Foursquare</full_name>
      <docblock line="8">
        <description><![CDATA[Hybrid_Providers_Foursquare provider adapter based on OAuth2 protocol]]></description>
        <long-description><![CDATA[<p>http://hybridauth.sourceforge.net/userguide/IDProvider_info_Foursquare.html</p>]]></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="18" package="Default">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="15">
          <description><![CDATA[IDp wrappers initializer]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="33" package="Default">
        <name>getUserProfile</name>
        <full_name>getUserProfile</full_name>
        <docblock line="30">
          <description><![CDATA[load the user profile from the IDp api client]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\Providers\Foursquare.php</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\Providers\Google.php" hash="c1d499c6850214bd82b592597722e790" package="Default">
    <class final="false" abstract="false" namespace="global" line="13" package="Default">
      <extends>\Hybrid_Provider_Model_OAuth2</extends>
      <name>Hybrid_Providers_Google</name>
      <full_name>\Hybrid_Providers_Google</full_name>
      <docblock line="8">
        <description><![CDATA[Hybrid_Providers_Google provider adapter based on OAuth2 protocol]]></description>
        <long-description><![CDATA[<p>http://hybridauth.sourceforge.net/userguide/IDProvider_info_Google.html</p>]]></long-description>
      </docblock>
      <property final="false" static="false" visibility="public" line="16" namespace="global" package="Default">
        <name>$scope</name>
        <default><![CDATA["https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email https://www.google.com/m8/feeds/"]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="21" package="Default">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="18">
          <description><![CDATA[IDp wrappers initializer]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="34" package="Default">
        <name>loginBegin</name>
        <full_name>loginBegin</full_name>
        <docblock line="31">
          <description><![CDATA[begin login step]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="Default">
        <name>getUserProfile</name>
        <full_name>getUserProfile</full_name>
        <docblock line="39">
          <description><![CDATA[load the user profile from the IDp api client]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="80" package="Default">
        <name>getUserContacts</name>
        <full_name>getUserContacts</full_name>
        <docblock line="76">
          <description><![CDATA[load the user (Gmail) contacts
 .]]></description>
          <long-description><![CDATA[<p>.toComplete</p>]]></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\Providers\Google.php</error>
      <error line="16" code="50018">No DocBlock was found for property $scope</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\Providers\GoogleOpenID.php" hash="641a51c76472b2d5fdf2be042cce0522" package="Default">
    <docblock line="8">
      <description><![CDATA[Hybrid_Providers_Google OpenID based]]></description>
      <long-description><![CDATA[<p>Provided as a way to keep backward compatibility for Google OpenID based on HybridAuth &lt;= 2.0.8</p>

<p>http://hybridauth.sourceforge.net/userguide/IDProvider_info_Google.html</p>]]></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="24" package="Default">
      <extends>\Hybrid_Provider_Model_OpenID</extends>
      <name>Hybrid_Providers_Google</name>
      <full_name>\Hybrid_Providers_Google</full_name>
      <docblock line="16">
        <description><![CDATA[To replace the default google adapter, we should use this config instead:]]></description>
        <long-description><![CDATA[<p>"Google" => array (
    "enabled" => true,
    "wrapper" => array( "path" => "Providers/GoogleOpenID.php", "class" => "Hybrid_Providers_Google" )
)</p>]]></long-description>
      </docblock>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$openidIdentifier</name>
        <default><![CDATA["https://www.google.com/accounts/o8/id"]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="Default">
        <name>loginFinish</name>
        <full_name>loginFinish</full_name>
        <docblock line="28">
          <description><![CDATA[finish login step]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="26" code="50018">No DocBlock was found for property $openidIdentifier</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\Providers\LinkedIn.php" hash="05ab46fbb87b7e47917b7d9c73686e5a" package="Default">
    <include line="26" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="27" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="15" package="Default">
      <extends>\Hybrid_Provider_Model</extends>
      <name>Hybrid_Providers_LinkedIn</name>
      <full_name>\Hybrid_Providers_LinkedIn</full_name>
      <docblock line="8">
        <description><![CDATA[Hybrid_Providers_LinkedIn provider adapter based on OAuth1 protocol]]></description>
        <long-description><![CDATA[<p>Hybrid_Providers_LinkedIn use linkedinPHP library created by fiftyMission Inc.</p>

<p>http://hybridauth.sourceforge.net/userguide/IDProvider_info_LinkedIn.html</p>]]></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="20" package="Default">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="17">
          <description><![CDATA[IDp wrappers initializer]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="Default">
        <name>loginBegin</name>
        <full_name>loginBegin</full_name>
        <docblock line="36">
          <description><![CDATA[begin login step]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="59" package="Default">
        <name>loginFinish</name>
        <full_name>loginFinish</full_name>
        <docblock line="56">
          <description><![CDATA[finish login step]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="89" package="Default">
        <name>getUserProfile</name>
        <full_name>getUserProfile</full_name>
        <docblock line="86">
          <description><![CDATA[load the user profile from the IDp api client]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="133" package="Default">
        <name>getUserContacts</name>
        <full_name>getUserContacts</full_name>
        <docblock line="130">
          <description><![CDATA[load the user contacts]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="168" package="Default">
        <name>setUserStatus</name>
        <full_name>setUserStatus</full_name>
        <docblock line="165">
          <description><![CDATA[update user status]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="168">
          <name>$status</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="202" package="Default">
        <name>getUserActivity</name>
        <full_name>getUserActivity</full_name>
        <docblock line="197">
          <description><![CDATA[load the user latest activity
   - timeline : all the stream
   - me       : the user activity only]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="202">
          <name>$stream</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\Providers\LinkedIn.php</error>
      <error line="165" code="50015">Argument $status is missing from the Docblock of setUserStatus()</error>
      <error line="197" code="50015">Argument $stream is missing from the Docblock of getUserActivity()</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\Providers\Live.php" hash="e7eac7d85f607207c48889cd1fd64df3" package="Default">
    <include line="37" type="Require Once" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="27" package="Default">
      <name>WRAP_CLIENT_ID</name>
      <full_name>\WRAP_CLIENT_ID</full_name>
      <value><![CDATA[$this->config["keys"]["id"]]]></value>
    </constant>
    <constant namespace="global" line="28" package="Default">
      <name>WRAP_CLIENT_SECRET</name>
      <full_name>\WRAP_CLIENT_SECRET</full_name>
      <value><![CDATA[$this->config["keys"]["secret"]]]></value>
    </constant>
    <constant namespace="global" line="29" package="Default">
      <name>WRAP_CALLBACK</name>
      <full_name>\WRAP_CALLBACK</full_name>
      <value><![CDATA[$this->endpoint]]></value>
    </constant>
    <constant namespace="global" line="30" package="Default">
      <name>WRAP_CHANNEL_URL</name>
      <full_name>\WRAP_CHANNEL_URL</full_name>
      <value><![CDATA[\Hybrid_Auth::$config["base_url"] . "?get=windows_live_channel"]]></value>
    </constant>
    <constant namespace="global" line="33" package="Default">
      <name>WRAP_CONSENT_URL</name>
      <full_name>\WRAP_CONSENT_URL</full_name>
      <value><![CDATA['https://consent.live.com/Connect.aspx']]></value>
    </constant>
    <constant namespace="global" line="34" package="Default">
      <name>WRAP_ACCESS_URL</name>
      <full_name>\WRAP_ACCESS_URL</full_name>
      <value><![CDATA['https://consent.live.com/AccessToken.aspx']]></value>
    </constant>
    <constant namespace="global" line="35" package="Default">
      <name>WRAP_REFRESH_URL</name>
      <full_name>\WRAP_REFRESH_URL</full_name>
      <value><![CDATA['https://consent.live.com/RefreshToken.aspx']]></value>
    </constant>
    <class final="false" abstract="false" namespace="global" line="15" package="Default">
      <extends>\Hybrid_Provider_Model</extends>
      <name>Hybrid_Providers_Live</name>
      <full_name>\Hybrid_Providers_Live</full_name>
      <docblock line="8">
        <description><![CDATA[Hybrid_Providers_Live provider adapter based on OAuth1 protocol]]></description>
        <long-description><![CDATA[<p>Hybrid_Providers_Live use OAuthWrapHandler class provided by microsoft</p>

<p>http://hybridauth.sourceforge.net/userguide/IDProvider_info_Live.html</p>]]></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="20" package="Default">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="17">
          <description><![CDATA[IDp wrappers initializer]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="45" package="Default">
        <name>loginBegin</name>
        <full_name>loginBegin</full_name>
        <docblock line="42">
          <description><![CDATA[begin login step]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="55" package="Default">
        <name>loginFinish</name>
        <full_name>loginFinish</full_name>
        <docblock line="52">
          <description><![CDATA[finish login step]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="76" package="Default">
        <name>getUserProfile</name>
        <full_name>getUserProfile</full_name>
        <docblock line="73">
          <description><![CDATA[load the user profile from the IDp api client]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\Providers\Live.php</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\Providers\MySpace.php" hash="af259b6fc2a75714cbd3a0472de949ed" package="Default">
    <class final="false" abstract="false" namespace="global" line="13" package="Default">
      <extends>\Hybrid_Provider_Model_OAuth1</extends>
      <name>Hybrid_Providers_MySpace</name>
      <full_name>\Hybrid_Providers_MySpace</full_name>
      <docblock line="8">
        <description><![CDATA[Hybrid_Providers_MySpace provider adapter based on OAuth1 protocol]]></description>
        <long-description><![CDATA[<p>http://hybridauth.sourceforge.net/userguide/IDProvider_info_MySpace.html</p>]]></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="18" package="Default">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="15">
          <description><![CDATA[IDp wrappers initializer]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="Default">
        <name>getCurrentUserId</name>
        <full_name>getCurrentUserId</full_name>
        <docblock line="29">
          <description><![CDATA[get the connected uid from myspace api]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="46" package="Default">
        <name>getUserProfile</name>
        <full_name>getUserProfile</full_name>
        <docblock line="43">
          <description><![CDATA[load the user profile from the IDp api client]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="74" package="Default">
        <name>getUserContacts</name>
        <full_name>getUserContacts</full_name>
        <docblock line="71">
          <description><![CDATA[load the user contacts]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="104" package="Default">
        <name>setUserStatus</name>
        <full_name>setUserStatus</full_name>
        <docblock line="101">
          <description><![CDATA[update user status]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="104">
          <name>$status</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="125" package="Default">
        <name>getUserActivity</name>
        <full_name>getUserActivity</full_name>
        <docblock line="120">
          <description><![CDATA[load the user latest activity
   - timeline : all the stream
   - me       : the user activity only]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="125">
          <name>$stream</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\Providers\MySpace.php</error>
      <error line="101" code="50015">Argument $status is missing from the Docblock of setUserStatus()</error>
      <error line="120" code="50015">Argument $stream is missing from the Docblock of getUserActivity()</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\Providers\OpenID.php" hash="ef356016935563fb8d6e5c438b3b20d1" package="Default">
    <class final="false" abstract="false" namespace="global" line="13" package="Default">
      <extends>\Hybrid_Provider_Model_OpenID</extends>
      <name>Hybrid_Providers_OpenID</name>
      <full_name>\Hybrid_Providers_OpenID</full_name>
      <docblock line="8">
        <description><![CDATA[Hybrid_Providers_OpenID provider adapter for any idp openid based]]></description>
        <long-description><![CDATA[<p>http://hybridauth.sourceforge.net/userguide/IDProvider_info_OpenID.html</p>]]></long-description>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\Providers\OpenID.php</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\Providers\Twitter.php" hash="a97db739f077d1f3490d6dfbb988ab6d" package="Default">
    <class final="false" abstract="false" namespace="global" line="11" package="Default">
      <extends>\Hybrid_Provider_Model_OAuth1</extends>
      <name>Hybrid_Providers_Twitter</name>
      <full_name>\Hybrid_Providers_Twitter</full_name>
      <docblock line="8">
        <description><![CDATA[Hybrid_Providers_Twitter provider adapter based on OAuth1 protocol]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="16" package="Default">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="13">
          <description><![CDATA[IDp wrappers initializer]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="Default">
        <name>getUserProfile</name>
        <full_name>getUserProfile</full_name>
        <docblock line="29">
          <description><![CDATA[load the user profile from the IDp api client]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="Default">
        <name>getUserContacts</name>
        <full_name>getUserContacts</full_name>
        <docblock line="58">
          <description><![CDATA[load the user contacts]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="110" package="Default">
        <name>setUserStatus</name>
        <full_name>setUserStatus</full_name>
        <docblock line="107">
          <description><![CDATA[update user status]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="110">
          <name>$status</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="128" package="Default">
        <name>getUserActivity</name>
        <full_name>getUserActivity</full_name>
        <docblock line="121">
          <description><![CDATA[load the user latest activity
   - timeline : all the stream
   - me       : the user activity only]]></description>
          <long-description><![CDATA[<p>by default return the timeline</p>]]></long-description>
        </docblock>
        <argument line="128">
          <name>$stream</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\Providers\Twitter.php</error>
      <error line="107" code="50015">Argument $status is missing from the Docblock of setUserStatus()</error>
      <error line="121" code="50015">Argument $stream is missing from the Docblock of getUserActivity()</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\Providers\Yahoo.php" hash="4b9a389a3f3b8d76a3e4c56e01c3403c" package="Default">
    <class final="false" abstract="false" namespace="global" line="15" package="Default">
      <extends>\Hybrid_Provider_Model_OpenID</extends>
      <name>Hybrid_Providers_Yahoo</name>
      <full_name>\Hybrid_Providers_Yahoo</full_name>
      <docblock line="10">
        <description><![CDATA[Hybrid_Providers_Yahoo provider adapter based on OAuth1 protocol]]></description>
        <long-description><![CDATA[<p>http://hybridauth.sourceforge.net/userguide/IDProvider_info_Yahoo.html</p>]]></long-description>
      </docblock>
      <property final="false" static="false" visibility="public" line="17" namespace="global" package="Default">
        <name>$openidIdentifier</name>
        <default><![CDATA["https://open.login.yahooapis.com/openid20/www.yahoo.com/xrds"]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="22" package="Default">
        <name>loginFinish</name>
        <full_name>loginFinish</full_name>
        <docblock line="19">
          <description><![CDATA[finish login step]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\Providers\Yahoo.php</error>
      <error line="17" code="50018">No DocBlock was found for property $openidIdentifier</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\Provider_Adapter.php" hash="5cddda6b04c02a7440b17385ca097135" package="Default">
    <include line="70" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="79" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="18" package="Default">
      <extends/>
      <name>Hybrid_Provider_Adapter</name>
      <full_name>\Hybrid_Provider_Adapter</full_name>
      <docblock line="8">
        <description><![CDATA[Hybrid_Provider_Adapter is the basic class which Hybrid_Auth will use
to connect users to a given provider.]]></description>
        <long-description><![CDATA[<p>Basically Hybrid_Provider_Adapterwill create a bridge from your php
application to the provider api.</p>

<p>Hybrid_Auth will automatically load Hybrid_Provider_Adapter and create
an instance of it for each authenticated provider.</p>]]></long-description>
      </docblock>
      <property final="false" static="false" visibility="public" line="21" namespace="global" package="Default">
        <name>$id</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="24" namespace="global" package="Default">
        <name>$config</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="27" namespace="global" package="Default">
        <name>$params</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="30" namespace="global" package="Default">
        <name>$wrapper</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$adapter</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="43" package="Default">
        <name>factory</name>
        <full_name>factory</full_name>
        <docblock line="37">
          <description><![CDATA[create a new adapter switch IDp name or ID]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="37" name="param" description="The id or name of the IDp" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="param" description="(optional) required parameters by the adapter" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="43">
          <name>$params</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="96" package="Default">
        <name>login</name>
        <full_name>login</full_name>
        <docblock line="92">
          <description><![CDATA[Hybrid_Provider_Adapter::login(), prepare the user session and the authentification request
for index.php]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="151" package="Default">
        <name>logout</name>
        <full_name>logout</full_name>
        <docblock line="148">
          <description><![CDATA[let hybridauth forget all about the user for the current provider]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="161" package="Default">
        <name>isUserConnected</name>
        <full_name>isUserConnected</full_name>
        <docblock line="158">
          <description><![CDATA[return true if the user is connected to the current provider]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="175" package="Default">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="168">
          <description><![CDATA[handle :
  getUserProfile()
  getUserContacts()
  getUserActivity()
  setUserStatus()]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="175">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="175">
          <name>$arguments</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="201" package="Default">
        <name>getAccessToken</name>
        <full_name>getAccessToken</full_name>
        <docblock line="197">
          <description><![CDATA[If the user is connected, then return the access_token and access_token_secret
if the provider api use oauth]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="224" package="Default">
        <name>api</name>
        <full_name>api</full_name>
        <docblock line="221">
          <description><![CDATA[Naive getter of the current connected IDp API client]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="240" package="Default">
        <name>returnToCallbackUrl</name>
        <full_name>returnToCallbackUrl</full_name>
        <docblock line="237">
          <description><![CDATA[redirect the user to hauth_return_to (the callback url)]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="259" package="Default">
        <name>getConfigById</name>
        <full_name>getConfigById</full_name>
        <docblock line="256">
          <description><![CDATA[return the provider config by id]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="259">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="273" package="Default">
        <name>getProviderCiId</name>
        <full_name>getProviderCiId</full_name>
        <docblock line="270">
          <description><![CDATA[return the provider config by id; insensitive]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="273">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\Provider_Adapter.php</error>
      <error line="21" code="50018">No DocBlock was found for property $id</error>
      <error line="24" code="50018">No DocBlock was found for property $config</error>
      <error line="27" code="50018">No DocBlock was found for property $params</error>
      <error line="30" code="50018">No DocBlock was found for property $wrapper</error>
      <error line="33" code="50018">No DocBlock was found for property $adapter</error>
      <error line="168" code="50015">Argument $name is missing from the Docblock of __call()</error>
      <error line="168" code="50015">Argument $arguments is missing from the Docblock of __call()</error>
      <error line="256" code="50015">Argument $id is missing from the Docblock of getConfigById()</error>
      <error line="270" code="50015">Argument $id is missing from the Docblock of getProviderCiId()</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\Provider_Model.php" hash="103851d756b2e691fa3f6292b6ce912a" package="Default">
    <class final="false" abstract="false" namespace="global" line="22" package="Default">
      <extends/>
      <name>Hybrid_Provider_Model</name>
      <full_name>\Hybrid_Provider_Model</full_name>
      <docblock line="8">
        <description><![CDATA[Hybrid_Provider_Model provide a common interface for supported IDps on HybridAuth.]]></description>
        <long-description><![CDATA[<p>Basically, each provider adapter has to define at least 4 methods:
  Hybrid_Providers_{provider_name}::initialize()
  Hybrid_Providers_{provider_name}::loginBegin()
  Hybrid_Providers_{provider_name}::loginFinish()
  Hybrid_Providers_{provider_name}::getUserProfile()</p>

<p>HybridAuth also come with three others models
  Class Hybrid_Provider_Model_OpenID for providers that uses the OpenID 1 and 2 protocol.
  Class Hybrid_Provider_Model_OAuth1 for providers that uses the OAuth 1 protocol.
  Class Hybrid_Provider_Model_OAuth2 for providers that uses the OAuth 2 protocol.</p>]]></long-description>
      </docblock>
      <property final="false" static="false" visibility="public" line="25" namespace="global" package="Default">
        <name>$providerId</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="28" namespace="global" package="Default">
        <name>$config</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="31" namespace="global" package="Default">
        <name>$params</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="34" namespace="global" package="Default">
        <name>$endpoint</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="37" namespace="global" package="Default">
        <name>$user</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="40" namespace="global" package="Default">
        <name>$api</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="45" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="42">
          <description><![CDATA[common providers adapter constructor]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="45">
          <name>$providerId</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="45">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="45">
          <name>$params</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="85" package="Default">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="76">
          <description><![CDATA[IDp wrappers initializer]]></description>
          <long-description><![CDATA[<p>The main job of wrappers initializer is to performs (depend on the IDp api client it self):
    - include some libs nedded by this provider,
    - check IDp key and secret,
    - set some needed parameters (stored in $this->params) by this IDp api client
    - create and setup an instance of the IDp api client on $this->api</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="92" package="Default">
        <name>loginBegin</name>
        <full_name>loginBegin</full_name>
        <docblock line="89">
          <description><![CDATA[begin login]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="99" package="Default">
        <name>loginFinish</name>
        <full_name>loginFinish</full_name>
        <docblock line="96">
          <description><![CDATA[finish login]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="106" package="Default">
        <name>logout</name>
        <full_name>logout</full_name>
        <docblock line="103">
          <description><![CDATA[generic logout, just erase current provider adapter stored data to let Hybrid_Auth all forget about it]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="120" package="Default">
        <name>getUserProfile</name>
        <full_name>getUserProfile</full_name>
        <docblock line="117">
          <description><![CDATA[grab the user profile from the IDp api client]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="132" package="Default">
        <name>getUserContacts</name>
        <full_name>getUserContacts</full_name>
        <docblock line="129">
          <description><![CDATA[load the current logged in user contacts list from the IDp api client]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="144" package="Default">
        <name>getUserActivity</name>
        <full_name>getUserActivity</full_name>
        <docblock line="141">
          <description><![CDATA[return the user activity stream]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="144">
          <name>$stream</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="156" package="Default">
        <name>setUserStatus</name>
        <full_name>setUserStatus</full_name>
        <docblock line="153">
          <description><![CDATA[return the user activity stream]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="156">
          <name>$status</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="168" package="Default">
        <name>isUserConnected</name>
        <full_name>isUserConnected</full_name>
        <docblock line="165">
          <description><![CDATA[return true if the user is connected to the current provider]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="178" package="Default">
        <name>setUserConnected</name>
        <full_name>setUserConnected</full_name>
        <docblock line="175">
          <description><![CDATA[set user to connected]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="190" package="Default">
        <name>setUserUnconnected</name>
        <full_name>setUserUnconnected</full_name>
        <docblock line="187">
          <description><![CDATA[set user to unconnected]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="202" package="Default">
        <name>token</name>
        <full_name>token</full_name>
        <docblock line="199">
          <description><![CDATA[get or set a token]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="202">
          <name>$token</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="202">
          <name>$value</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="217" package="Default">
        <name>deleteToken</name>
        <full_name>deleteToken</full_name>
        <docblock line="214">
          <description><![CDATA[delete a stored token]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="217">
          <name>$token</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="227" package="Default">
        <name>clearTokens</name>
        <full_name>clearTokens</full_name>
        <docblock line="224">
          <description><![CDATA[clear all existen tokens for this provider]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\Provider_Model.php</error>
      <error line="25" code="50018">No DocBlock was found for property $providerId</error>
      <error line="28" code="50018">No DocBlock was found for property $config</error>
      <error line="31" code="50018">No DocBlock was found for property $params</error>
      <error line="34" code="50018">No DocBlock was found for property $endpoint</error>
      <error line="37" code="50018">No DocBlock was found for property $user</error>
      <error line="40" code="50018">No DocBlock was found for property $api</error>
      <error line="42" code="50015">Argument $providerId is missing from the Docblock of __construct()</error>
      <error line="42" code="50015">Argument $config is missing from the Docblock of __construct()</error>
      <error line="42" code="50015">Argument $params is missing from the Docblock of __construct()</error>
      <error line="141" code="50015">Argument $stream is missing from the Docblock of getUserActivity()</error>
      <error line="153" code="50015">Argument $status is missing from the Docblock of setUserStatus()</error>
      <error line="199" code="50015">Argument $token is missing from the Docblock of token()</error>
      <error line="199" code="50015">Argument $value is missing from the Docblock of token()</error>
      <error line="214" code="50015">Argument $token is missing from the Docblock of deleteToken()</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\Provider_Model_OAuth1.php" hash="7143725704093835c50bf22517bca555" package="Default">
    <include line="62" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="63" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="20" package="Default">
      <extends>\Hybrid_Provider_Model</extends>
      <name>Hybrid_Provider_Model_OAuth1</name>
      <full_name>\Hybrid_Provider_Model_OAuth1</full_name>
      <docblock line="8">
        <description><![CDATA[To implement an OAuth 1 based service provider, Hybrid_Provider_Model_OAuth1
can be used to save the hassle of the authentication flow.]]></description>
        <long-description><![CDATA[<p>Each class that inherit from Hybrid_Provider_Model_OAuth1 have to implemenent
at least 2 methods:
  Hybrid_Providers_{provider_name}::initialize()     to setup the provider api end-points urls
  Hybrid_Providers_{provider_name}::getUserProfile() to grab the user profile</p>

<p>Hybrid_Provider_Model_OAuth1 use OAuth1Client v0.1 which can be found on
Hybrid/thirdparty/OAuth/OAuth1Client.php</p>]]></long-description>
      </docblock>
      <property final="false" static="false" visibility="public" line="22" namespace="global" package="Default">
        <name>$request_tokens_raw</name>
        <default><![CDATA[null]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="23" namespace="global" package="Default">
        <name>$access_tokens_raw</name>
        <default><![CDATA[null]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="Default">
        <name>errorMessageByStatus</name>
        <full_name>errorMessageByStatus</full_name>
        <docblock line="25">
          <description><![CDATA[try to get the error message from provider api]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="28">
          <name>$code</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="54" package="Default">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="51">
          <description><![CDATA[adapter initializer]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="92" package="Default">
        <name>loginBegin</name>
        <full_name>loginBegin</full_name>
        <docblock line="89">
          <description><![CDATA[begin login step]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="120" package="Default">
        <name>loginFinish</name>
        <full_name>loginFinish</full_name>
        <docblock line="117">
          <description><![CDATA[finish login step]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\Provider_Model_OAuth1.php</error>
      <error line="22" code="50018">No DocBlock was found for property $request_tokens_raw</error>
      <error line="23" code="50018">No DocBlock was found for property $access_tokens_raw</error>
      <error line="25" code="50015">Argument $code is missing from the Docblock of errorMessageByStatus()</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\Provider_Model_OAuth2.php" hash="56b548f8ca3aed57e929a2b04ccf85ea" package="Default">
    <include line="66" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="20" package="Default">
      <extends>\Hybrid_Provider_Model</extends>
      <name>Hybrid_Provider_Model_OAuth2</name>
      <full_name>\Hybrid_Provider_Model_OAuth2</full_name>
      <docblock line="8">
        <description><![CDATA[To implement an OAuth 2 based service provider, Hybrid_Provider_Model_OAuth2
can be used to save the hassle of the authentication flow.]]></description>
        <long-description><![CDATA[<p>Each class that inherit from Hybrid_Provider_Model_OAuth2 have to implemenent
at least 2 methods:
  Hybrid_Providers_{provider_name}::initialize()     to setup the provider api end-points urls
  Hybrid_Providers_{provider_name}::getUserProfile() to grab the user profile</p>

<p>Hybrid_Provider_Model_OAuth2 use OAuth2Client v0.1 which can be found on
Hybrid/thirdparty/OAuth/OAuth2Client.php</p>]]></long-description>
      </docblock>
      <property final="false" static="false" visibility="public" line="23" namespace="global" package="Default">
        <name>$scope</name>
        <default><![CDATA[""]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="Default">
        <name>errorMessageByStatus</name>
        <full_name>errorMessageByStatus</full_name>
        <docblock line="25">
          <description><![CDATA[try to get the error message from provider api]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="28">
          <name>$code</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="54" package="Default">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="51">
          <description><![CDATA[adapter initializer]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="85" package="Default">
        <name>loginBegin</name>
        <full_name>loginBegin</full_name>
        <docblock line="82">
          <description><![CDATA[begin login step]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="96" package="Default">
        <name>loginFinish</name>
        <full_name>loginFinish</full_name>
        <docblock line="93">
          <description><![CDATA[finish login step]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="130" package="Default">
        <name>refreshToken</name>
        <full_name>refreshToken</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\Provider_Model_OAuth2.php</error>
      <error line="23" code="50018">No DocBlock was found for property $scope</error>
      <error line="25" code="50015">Argument $code is missing from the Docblock of errorMessageByStatus()</error>
      <error line="130" code="50010">No DocBlock was found for method refreshToken()</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\Provider_Model_OpenID.php" hash="33b100125e4616cee3dbcd733283f0af" package="Default">
    <include line="35" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="18" package="Default">
      <extends>\Hybrid_Provider_Model</extends>
      <name>Hybrid_Provider_Model_OpenID</name>
      <full_name>\Hybrid_Provider_Model_OpenID</full_name>
      <docblock line="8">
        <description><![CDATA[To implement an OpenID based service provider, Hybrid_Provider_Model_OpenID
can be used to save the hassle of the authentication flow.]]></description>
        <long-description><![CDATA[<p>Each class that inherit from Hybrid_Provider_Model_OAuth2 have only to define
the provider identifier :</p>

<pre><code>public $openidIdentifier = ""; </code></pre>

<p>Hybrid_Provider_Model_OpenID use LightOpenID lib which can be found on
Hybrid/thirdparty/OpenID/LightOpenID.php</p>]]></long-description>
      </docblock>
      <property final="false" static="false" visibility="public" line="21" namespace="global" package="Default">
        <name>$openidIdentifier</name>
        <default><![CDATA[""]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="Default">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="25">
          <description><![CDATA[adapter initializer]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="45" package="Default">
        <name>loginBegin</name>
        <full_name>loginBegin</full_name>
        <docblock line="42">
          <description><![CDATA[begin login step]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="85" package="Default">
        <name>loginFinish</name>
        <full_name>loginFinish</full_name>
        <docblock line="82">
          <description><![CDATA[finish login step]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="157" package="Default">
        <name>getUserProfile</name>
        <full_name>getUserProfile</full_name>
        <docblock line="154">
          <description><![CDATA[load the user profile from the IDp api client]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\Provider_Model_OpenID.php</error>
      <error line="21" code="50018">No DocBlock was found for property $openidIdentifier</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\Storage.php" hash="346eacae3325d576ac1bd69bc1a6d426" package="Default">
    <class final="false" abstract="false" namespace="global" line="11" package="Default">
      <extends/>
      <name>Hybrid_Storage</name>
      <full_name>\Hybrid_Storage</full_name>
      <docblock line="8">
        <description><![CDATA[HybridAuth storage manager]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="13" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="20" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <argument line="20">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="20">
          <name>$expiration</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <argument line="31">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="31">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="38" package="Default">
        <name>clear</name>
        <full_name>clear</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="43" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <argument line="43">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="52" package="Default">
        <name>deleteMatch</name>
        <full_name>deleteMatch</full_name>
        <argument line="52">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="65" package="Default">
        <name>getSessionData</name>
        <full_name>getSessionData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="70" package="Default">
        <name>restoreSessionData</name>
        <full_name>restoreSessionData</full_name>
        <argument line="70">
          <name>$sessiondata</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\Storage.php</error>
      <error line="13" code="50010">No DocBlock was found for method __construct()</error>
      <error line="20" code="50010">No DocBlock was found for method get()</error>
      <error line="31" code="50010">No DocBlock was found for method set()</error>
      <error line="38" code="50010">No DocBlock was found for method clear()</error>
      <error line="43" code="50010">No DocBlock was found for method delete()</error>
      <error line="52" code="50010">No DocBlock was found for method deleteMatch()</error>
      <error line="65" code="50010">No DocBlock was found for method getSessionData()</error>
      <error line="70" code="50010">No DocBlock was found for method restoreSessionData()</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\thirdparty\Facebook\base_facebook.php" hash="9e9556021d9375d0804ff7e80ac16e43" package="Default">
    <docblock line="2">
      <description><![CDATA[Copyright 2011 Facebook, Inc.]]></description>
      <long-description><![CDATA[<p>Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License. You may obtain
a copy of the License at</p>

<pre><code>http://www.apache.org/licenses/LICENSE-2.0
</code></pre>

<p>Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.</p>]]></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="30" package="Default">
      <extends>\Exception</extends>
      <name>FacebookApiException</name>
      <full_name>\FacebookApiException</full_name>
      <docblock line="25">
        <description><![CDATA[Thrown when an API call returns an exception.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="25" name="author" description="Naitik Shah &lt;naitik@facebook.com&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="35" namespace="global" package="Default">
        <name>$result</name>
        <default><![CDATA[]]></default>
        <docblock line="32">
          <description><![CDATA[The result from the API server that represents the exception information.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="37">
          <description><![CDATA[Make a new API Exception with the given result.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="37" name="param" description="The result from the API server" type="array" variable="$result">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="68" package="Default">
        <name>getResult</name>
        <full_name>getResult</full_name>
        <docblock line="63">
          <description><![CDATA[Return the associated result object returned by the API server.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="63" name="return" description="The result from the API server" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="78" package="Default">
        <name>getType</name>
        <full_name>getType</full_name>
        <docblock line="72">
          <description><![CDATA[Returns the associated type for the error.]]></description>
          <long-description><![CDATA[<p>This will default to
'Exception' when a type is not available.</p>]]></long-description>
          <tag line="72" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="100" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="95">
          <description><![CDATA[To make debugging easier.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="95" name="return" description="The string representation of the error" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="118" package="Default">
      <extends/>
      <name>BaseFacebook</name>
      <full_name>\BaseFacebook</full_name>
      <docblock line="109">
        <description><![CDATA[Provides access to the Facebook Platform.]]></description>
        <long-description><![CDATA[<p>This class provides
a majority of the functionality needed, but the class is abstract
because it is designed to be sub-classed.  The subclass must
implement the four abstract methods listed at the bottom of
the file.</p>]]></long-description>
        <tag line="109" name="author" description="Naitik Shah &lt;naitik@facebook.com&gt;"/>
      </docblock>
      <constant namespace="global" line="123" package="Default">
        <name>VERSION</name>
        <full_name>VERSION</full_name>
        <value><![CDATA['3.1.1']]></value>
        <docblock line="120">
          <description><![CDATA[Version.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <property final="false" static="true" visibility="public" line="128" namespace="global" package="Default">
        <name>$CURL_OPTS</name>
        <default><![CDATA[array(CURLOPT_CONNECTTIMEOUT => 10, CURLOPT_RETURNTRANSFER => true, CURLOPT_TIMEOUT => 60, CURLOPT_USERAGENT => 'facebook-php-3.1')]]></default>
        <docblock line="125">
          <description><![CDATA[Default options for curl.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="139" namespace="global" package="Default">
        <name>$DROP_QUERY_PARAMS</name>
        <default><![CDATA[array('code', 'state', 'signed_request')]]></default>
        <docblock line="135">
          <description><![CDATA[List of query parameters that get automatically dropped when rebuilding
the current URL.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="148" namespace="global" package="Default">
        <name>$DOMAIN_MAP</name>
        <default><![CDATA[array('api' => 'https://api.facebook.com/', 'api_video' => 'https://api-video.facebook.com/', 'api_read' => 'https://api-read.facebook.com/', 'graph' => 'https://graph.facebook.com/', 'graph_video' => 'https://graph-video.facebook.com/', 'www' => 'https://www.facebook.com/')]]></default>
        <docblock line="145">
          <description><![CDATA[Maps aliases to Facebook domains.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="162" namespace="global" package="Default">
        <name>$appId</name>
        <default><![CDATA[]]></default>
        <docblock line="157">
          <description><![CDATA[The Application ID.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="157" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="169" namespace="global" package="Default">
        <name>$appSecret</name>
        <default><![CDATA[]]></default>
        <docblock line="164">
          <description><![CDATA[The Application App Secret.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="164" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="176" namespace="global" package="Default">
        <name>$user</name>
        <default><![CDATA[]]></default>
        <docblock line="171">
          <description><![CDATA[The ID of the Facebook user, or 0 if the user is logged out.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="171" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="181" namespace="global" package="Default">
        <name>$signedRequest</name>
        <default><![CDATA[]]></default>
        <docblock line="178">
          <description><![CDATA[The data from the signed_request token.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="186" namespace="global" package="Default">
        <name>$state</name>
        <default><![CDATA[]]></default>
        <docblock line="183">
          <description><![CDATA[A CSRF state variable to assist in the defense against CSRF attacks.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="194" namespace="global" package="Default">
        <name>$accessToken</name>
        <default><![CDATA[null]]></default>
        <docblock line="188">
          <description><![CDATA[The OAuth access token received in exchange for a valid authorization
code.]]></description>
          <long-description><![CDATA[<p>null means the access token has yet to be determined.</p>]]></long-description>
          <tag line="188" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="201" namespace="global" package="Default">
        <name>$fileUploadSupport</name>
        <default><![CDATA[false]]></default>
        <docblock line="196">
          <description><![CDATA[Indicates if the CURL based @ syntax for file uploads is enabled.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="196" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="213" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="203">
          <description><![CDATA[Initialize a Facebook Application.]]></description>
          <long-description><![CDATA[<p>The configuration:
- appId: the application ID
- secret: the application secret
- fileUpload: (optional) boolean indicating if file uploads are enabled</p>]]></long-description>
          <tag line="203" name="param" description="The application configuration" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="213">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="232" package="Default">
        <name>setAppId</name>
        <full_name>setAppId</full_name>
        <docblock line="226">
          <description><![CDATA[Set the Application ID.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="226" name="param" description="The Application ID" type="string" variable="$appId">
            <type by_reference="false">string</type>
          </tag>
          <tag line="226" name="return" description="" type="\BaseFacebook">
            <type by_reference="false">\BaseFacebook</type>
          </tag>
        </docblock>
        <argument line="232">
          <name>$appId</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="242" package="Default">
        <name>getAppId</name>
        <full_name>getAppId</full_name>
        <docblock line="237">
          <description><![CDATA[Get the Application ID.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="237" name="return" description="the Application ID" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="253" package="Default">
        <name>setApiSecret</name>
        <full_name>setApiSecret</full_name>
        <docblock line="246">
          <description><![CDATA[Set the App Secret.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="246" name="param" description="The App Secret" type="string" variable="$apiSecret">
            <type by_reference="false">string</type>
          </tag>
          <tag line="246" name="return" description="" type="\BaseFacebook">
            <type by_reference="false">\BaseFacebook</type>
          </tag>
          <tag line="246" name="deprecated" description=""/>
        </docblock>
        <argument line="253">
          <name>$apiSecret</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="264" package="Default">
        <name>setAppSecret</name>
        <full_name>setAppSecret</full_name>
        <docblock line="258">
          <description><![CDATA[Set the App Secret.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="258" name="param" description="The App Secret" type="string" variable="$appSecret">
            <type by_reference="false">string</type>
          </tag>
          <tag line="258" name="return" description="" type="\BaseFacebook">
            <type by_reference="false">\BaseFacebook</type>
          </tag>
        </docblock>
        <argument line="264">
          <name>$appSecret</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="275" package="Default">
        <name>getApiSecret</name>
        <full_name>getApiSecret</full_name>
        <docblock line="269">
          <description><![CDATA[Get the App Secret.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="269" name="return" description="the App Secret" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="269" name="deprecated" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="284" package="Default">
        <name>getAppSecret</name>
        <full_name>getAppSecret</full_name>
        <docblock line="279">
          <description><![CDATA[Get the App Secret.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="279" name="return" description="the App Secret" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="294" package="Default">
        <name>setFileUploadSupport</name>
        <full_name>setFileUploadSupport</full_name>
        <docblock line="288">
          <description><![CDATA[Set the file upload support status.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="288" name="param" description="The file upload support status." type="boolean" variable="$fileUploadSupport">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="288" name="return" description="" type="\BaseFacebook">
            <type by_reference="false">\BaseFacebook</type>
          </tag>
        </docblock>
        <argument line="294">
          <name>$fileUploadSupport</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="304" package="Default">
        <name>getFileUploadSupport</name>
        <full_name>getFileUploadSupport</full_name>
        <docblock line="299">
          <description><![CDATA[Get the file upload support status.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="299" name="return" description="true if and only if the server supports file upload." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="315" package="Default">
        <name>useFileUploadSupport</name>
        <full_name>useFileUploadSupport</full_name>
        <docblock line="308">
          <description><![CDATA[DEPRECATED! Please use getFileUploadSupport instead.]]></description>
          <long-description><![CDATA[<p>Get the file upload support status.</p>]]></long-description>
          <tag line="308" name="return" description="true if and only if the server supports file upload." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="327" package="Default">
        <name>setAccessToken</name>
        <full_name>setAccessToken</full_name>
        <docblock line="319">
          <description><![CDATA[Sets the access token for api calls.]]></description>
          <long-description><![CDATA[<p>Use this if you get
your access token by other means and just want the SDK
to use it.</p>]]></long-description>
          <tag line="319" name="param" description="an access token." type="string" variable="$access_token">
            <type by_reference="false">string</type>
          </tag>
          <tag line="319" name="return" description="" type="\BaseFacebook">
            <type by_reference="false">\BaseFacebook</type>
          </tag>
        </docblock>
        <argument line="327">
          <name>$access_token</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="341" package="Default">
        <name>getAccessToken</name>
        <full_name>getAccessToken</full_name>
        <docblock line="332">
          <description><![CDATA[Determines the access token that should be used for API calls.]]></description>
          <long-description><![CDATA[<p>The first time this is called, $this->accessToken is set equal
to either a valid user access token, or it's set to the application
access token if a valid user access token wasn't available.  Subsequent
calls return whatever the first call returned.</p>]]></long-description>
          <tag line="332" name="return" description="The access token" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="369" package="Default">
        <name>getUserAccessToken</name>
        <full_name>getUserAccessToken</full_name>
        <docblock line="359">
          <description><![CDATA[Determines and returns the user access token, first using
the signed request if present, and then falling back on
the authorization code if present.]]></description>
          <long-description><![CDATA[<p>The intent is to
return a valid user access token, or false if one is determined
to not be available.</p>]]></long-description>
          <tag line="359" name="return" description="A valid user access token, or false if one could not be determined." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="427" package="Default">
        <name>getSignedRequest</name>
        <full_name>getSignedRequest</full_name>
        <docblock line="421">
          <description><![CDATA[Retrieve the signed request, either from a request parameter or,
if not present, from a cookie.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="421" name="return" description="the signed request, if available, or null otherwise." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="446" package="Default">
        <name>getUser</name>
        <full_name>getUser</full_name>
        <docblock line="440">
          <description><![CDATA[Get the UID of the connected user, or 0
if the Facebook user is not connected.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="440" name="return" description="the UID if available." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="463" package="Default">
        <name>getUserFromAvailableData</name>
        <full_name>getUserFromAvailableData</full_name>
        <docblock line="455">
          <description><![CDATA[Determines the connected user by first examining any signed
requests, then considering an authorization code, and then
falling back to any persistent store storing the user.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="455" name="return" description="The id of the connected Facebook user, or 0 if no such user exists." type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="512" package="Default">
        <name>getLoginUrl</name>
        <full_name>getLoginUrl</full_name>
        <docblock line="500">
          <description><![CDATA[Get a Login URL for use with redirects.]]></description>
          <long-description><![CDATA[<p>By default, full page redirect is
assumed. If you are using the generated URL with a window.open() call in
JavaScript, you can pass in display=popup as part of the $params.</p>

<p>The parameters:
- redirect_uri: the url to go to after a successful login
- scope: comma separated list of requested extended perms</p>]]></long-description>
          <tag line="500" name="param" description="Provide custom parameters" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="500" name="return" description="The URL for the login flow" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="512">
          <name>$params</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="541" package="Default">
        <name>getLogoutUrl</name>
        <full_name>getLogoutUrl</full_name>
        <docblock line="532">
          <description><![CDATA[Get a Logout URL suitable for use with redirects.]]></description>
          <long-description><![CDATA[<p>The parameters:
- next: the url to go to after a successful logout</p>]]></long-description>
          <tag line="532" name="param" description="Provide custom parameters" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="532" name="return" description="The URL for the logout flow" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="541">
          <name>$params</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="563" package="Default">
        <name>getLoginStatusUrl</name>
        <full_name>getLoginStatusUrl</full_name>
        <docblock line="552">
          <description><![CDATA[Get a login status URL to fetch the status from Facebook.]]></description>
          <long-description><![CDATA[<p>The parameters:
- ok_session: the URL to go to if a session is found
- no_session: the URL to go to if the user is not connected
- no_user: the URL to go to if the user is not signed into facebook</p>]]></long-description>
          <tag line="552" name="param" description="Provide custom parameters" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="552" name="return" description="The URL for the logout flow" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="563">
          <name>$params</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="582" package="Default">
        <name>api</name>
        <full_name>api</full_name>
        <docblock line="577">
          <description><![CDATA[Make an API call.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="577" name="return" description="The decoded response" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="600" package="Default">
        <name>getSignedRequestCookieName</name>
        <full_name>getSignedRequestCookieName</full_name>
        <docblock line="591">
          <description><![CDATA[Constructs and returns the name of the cookie that
potentially houses the signed request for the app user.]]></description>
          <long-description><![CDATA[<p>The cookie is not set by the BaseFacebook class, but
it may be set by the JavaScript SDK.</p>]]></long-description>
          <tag line="591" name="return" description="the name of the cookie that would house the signed request value." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="611" package="Default">
        <name>getMetadataCookieName</name>
        <full_name>getMetadataCookieName</full_name>
        <docblock line="604">
          <description><![CDATA[Constructs and returns the name of the coookie that potentially contain
metadata.]]></description>
          <long-description><![CDATA[<p>The cookie is not set by the BaseFacebook class, but it may be
set by the JavaScript SDK.</p>]]></long-description>
          <tag line="604" name="return" description="the name of the cookie that would house metadata." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="623" package="Default">
        <name>getCode</name>
        <full_name>getCode</full_name>
        <docblock line="615">
          <description><![CDATA[Get the authorization code from the query parameters, if it exists,
and otherwise return false to signal no authorization code was
discoverable.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="615" name="return" description="The authorization code, or false if the authorization code could not be determined." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="652" package="Default">
        <name>getUserFromAccessToken</name>
        <full_name>getUserFromAccessToken</full_name>
        <docblock line="642">
          <description><![CDATA[Retrieves the UID with the understanding that
$this->accessToken has already been set and is
seemingly legitimate.]]></description>
          <long-description><![CDATA[<p>It relies on Facebook's Graph API
to retrieve user information and then extract
the user ID.</p>]]></long-description>
          <tag line="642" name="return" description="Returns the UID of the Facebook user, or 0 if the Facebook user could not be determined." type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="668" package="Default">
        <name>getApplicationAccessToken</name>
        <full_name>getApplicationAccessToken</full_name>
        <docblock line="661">
          <description><![CDATA[Returns the access token that should be used for logged out
users when no authorization code is available.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="661" name="return" description="The application access token, useful for gathering public information about users and applications." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="677" package="Default">
        <name>establishCSRFTokenState</name>
        <full_name>establishCSRFTokenState</full_name>
        <docblock line="672">
          <description><![CDATA[Lays down a CSRF state token for this process.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="672" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="696" package="Default">
        <name>getAccessTokenFromCode</name>
        <full_name>getAccessTokenFromCode</full_name>
        <docblock line="684">
          <description><![CDATA[Retrieves an access token for the given authorization code
(previously generated from www.facebook.com on behalf of
a specific user).]]></description>
          <long-description><![CDATA[<p>The authorization code is sent to graph.facebook.com
and a legitimate access token is generated provided the access token
and the user for which it was generated all match, and the user is
either logged in to Facebook or has granted an offline access permission.</p>]]></long-description>
          <tag line="684" name="param" description="An authorization code." type="string" variable="$code">
            <type by_reference="false">string</type>
          </tag>
          <tag line="684" name="return" description="An access token exchanged for the authorization code, or false if an access token could not be generated." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="696">
          <name>$code</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="696">
          <name>$redirect_uri</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="742" package="Default">
        <name>_restserver</name>
        <full_name>_restserver</full_name>
        <docblock line="734">
          <description><![CDATA[Invoke the old restserver.php endpoint.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="734" name="param" description="Method call object" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="734" name="return" description="The decoded response object" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="734" name="throws" description="" type="\FacebookApiException">
            <type by_reference="false">\FacebookApiException</type>
          </tag>
        </docblock>
        <argument line="742">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="773" package="Default">
        <name>isVideoPost</name>
        <full_name>isVideoPost</full_name>
        <docblock line="765">
          <description><![CDATA[Return true if this is video post.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="765" name="param" description="The path" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="765" name="param" description="The http method (default 'GET')" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="765" name="return" description="true if this is video post" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="773">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="773">
          <name>$method</name>
          <default><![CDATA['GET']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="790" package="Default">
        <name>_graph</name>
        <full_name>_graph</full_name>
        <docblock line="780">
          <description><![CDATA[Invoke the Graph API.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="780" name="param" description="The path (required)" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="780" name="param" description="The http method (default 'GET')" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="780" name="param" description="The query/post data" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="780" name="return" description="The decoded response object" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="780" name="throws" description="" type="\FacebookApiException">
            <type by_reference="false">\FacebookApiException</type>
          </tag>
        </docblock>
        <argument line="790">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="790">
          <name>$method</name>
          <default><![CDATA['GET']]></default>
          <type/>
        </argument>
        <argument line="790">
          <name>$params</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="825" package="Default">
        <name>_oauthRequest</name>
        <full_name>_oauthRequest</full_name>
        <docblock line="816">
          <description><![CDATA[Make a OAuth Request.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="816" name="param" description="The path (required)" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="816" name="param" description="The query/post data" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="816" name="return" description="The decoded response object" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="816" name="throws" description="" type="\FacebookApiException">
            <type by_reference="false">\FacebookApiException</type>
          </tag>
        </docblock>
        <argument line="825">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="825">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="851" package="Default">
        <name>makeRequest</name>
        <full_name>makeRequest</full_name>
        <docblock line="840">
          <description><![CDATA[Makes an HTTP request.]]></description>
          <long-description><![CDATA[<p>This method can be overridden by subclasses if
developers want to do fancier things or use something other than curl to
make the request.</p>]]></long-description>
          <tag line="840" name="param" description="The URL to make the request to" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="840" name="param" description="The parameters to use for the POST body" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="840" name="param" description="Initialized curl handle" type="\CurlHandler" variable="$ch">
            <type by_reference="false">\CurlHandler</type>
          </tag>
          <tag line="840" name="return" description="The response text" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="851">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="851">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="851">
          <name>$ch</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="906" package="Default">
        <name>parseSignedRequest</name>
        <full_name>parseSignedRequest</full_name>
        <docblock line="900">
          <description><![CDATA[Parses a signed_request and validates the signature.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="900" name="param" description="A signed token" type="string" variable="$signed_request">
            <type by_reference="false">string</type>
          </tag>
          <tag line="900" name="return" description="The payload inside it or null if the sig is wrong" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="906">
          <name>$signed_request</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="935" package="Default">
        <name>getApiUrl</name>
        <full_name>getApiUrl</full_name>
        <docblock line="929">
          <description><![CDATA[Build the URL for api given parameters.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="929" name="param" description="String the method name." type="\$method" variable="$method">
            <type by_reference="false">\$method</type>
          </tag>
          <tag line="929" name="return" description="The URL for the given parameters" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="935">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1015" package="Default">
        <name>getUrl</name>
        <full_name>getUrl</full_name>
        <docblock line="1006">
          <description><![CDATA[Build the URL for given domain alias, path and parameters.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1006" name="param" description="string The name of the domain" type="\$name" variable="$name">
            <type by_reference="false">\$name</type>
          </tag>
          <tag line="1006" name="param" description="string Optional path (without a leading slash)" type="\$path" variable="$path">
            <type by_reference="false">\$path</type>
          </tag>
          <tag line="1006" name="param" description="array Optional query parameters" type="\$params" variable="$params">
            <type by_reference="false">\$params</type>
          </tag>
          <tag line="1006" name="return" description="The URL for the given parameters" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1015">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1015">
          <name>$path</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
        <argument line="1015">
          <name>$params</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1036" package="Default">
        <name>getCurrentUrl</name>
        <full_name>getCurrentUrl</full_name>
        <docblock line="1030">
          <description><![CDATA[Returns the Current URL, stripping it of known FB parameters that should
not persist.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1030" name="return" description="The current URL" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1087" package="Default">
        <name>shouldRetainParam</name>
        <full_name>shouldRetainParam</full_name>
        <docblock line="1076">
          <description><![CDATA[Returns true if and only if the key or key/value pair should
be retained as part of the query string.]]></description>
          <long-description><![CDATA[<p>This amounts to
a brute-force search of the very small list of Facebook-specific
params that should be stripped out.</p>]]></long-description>
          <tag line="1076" name="param" description="A key or key/value pair within a URL's query (e.g. 'foo=a', 'foo=', or 'foo'." type="string" variable="$param">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1076" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="1087">
          <name>$param</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1105" package="Default">
        <name>throwAPIException</name>
        <full_name>throwAPIException</full_name>
        <docblock line="1097">
          <description><![CDATA[Analyzes the supplied result to see if it was thrown
because the access token is no longer valid.]]></description>
          <long-description><![CDATA[<p>If that is
the case, then we destroy the session.</p>]]></long-description>
          <tag line="1097" name="param" description="array A record storing the error message returned by a failed API call." type="\$result" variable="$result">
            <type by_reference="false">\$result</type>
          </tag>
        </docblock>
        <argument line="1105">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="1133" package="Default">
        <name>errorLog</name>
        <full_name>errorLog</full_name>
        <docblock line="1128">
          <description><![CDATA[Prints to the error log if you aren't in command line mode.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1128" name="param" description="Log message" type="string" variable="$msg">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1133">
          <name>$msg</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="1153" package="Default">
        <name>base64UrlDecode</name>
        <full_name>base64UrlDecode</full_name>
        <docblock line="1144">
          <description><![CDATA[Base64 encoding that doesn't need to be urlencode()ed.]]></description>
          <long-description><![CDATA[<p>Exactly the same as base64_encode except it uses
  - instead of +
  _ instead of /</p>]]></long-description>
          <tag line="1144" name="param" description="base64UrlEncoded string" type="string" variable="$input">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1144" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1153">
          <name>$input</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1160" package="Default">
        <name>destroySession</name>
        <full_name>destroySession</full_name>
        <docblock line="1157">
          <description><![CDATA[Destroy the current session]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1198" package="Default">
        <name>getMetadataCookie</name>
        <full_name>getMetadataCookie</full_name>
        <docblock line="1193">
          <description><![CDATA[Parses the metadata cookie that our Javascript API set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1193" name="return" description="array mapping key to value" type="\an">
            <type by_reference="false">\an</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="1243" package="Default">
        <name>setPersistentData</name>
        <full_name>setPersistentData</full_name>
        <docblock line="1234">
          <description><![CDATA[Stores the given ($key, $value) pair, so that future calls to
getPersistentData($key) return $value.]]></description>
          <long-description><![CDATA[<p>This call may be in another request.</p>]]></long-description>
          <tag line="1234" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1234" name="param" description="" type="array" variable="$value">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1234" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1243">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1243">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="1253" package="Default">
        <name>getPersistentData</name>
        <full_name>getPersistentData</full_name>
        <docblock line="1245">
          <description><![CDATA[Get the data for $key, persisted by BaseFacebook::setPersistentData()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1245" name="param" description="The key of the data to retrieve" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1245" name="param" description="The default value to return if $key is not found" type="boolean" variable="$default">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1245" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="1253">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1253">
          <name>$default</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="1261" package="Default">
        <name>clearPersistentData</name>
        <full_name>clearPersistentData</full_name>
        <docblock line="1255">
          <description><![CDATA[Clear the data with $key from the persistent storage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1255" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1255" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1261">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="1268" package="Default">
        <name>clearAllPersistentData</name>
        <full_name>clearAllPersistentData</full_name>
        <docblock line="1263">
          <description><![CDATA[Clear all data from the persistent storage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1263" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="684" code="50015">Argument $redirect_uri is missing from the Docblock of getAccessTokenFromCode()</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\thirdparty\Facebook\facebook.php" hash="9ca98ec14e2f3926ba89fcb753fbc598" package="Default">
    <include line="18" type="Require Once" package="Default">
      <name>base_facebook.php</name>
      <docblock line="2">
        <description><![CDATA[Copyright 2011 Facebook, Inc.]]></description>
        <long-description><![CDATA[<p>Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License. You may obtain
a copy of the License at</p>

<pre><code>http://www.apache.org/licenses/LICENSE-2.0
</code></pre>

<p>Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.</p>]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="global" line="24" package="Default">
      <extends>\BaseFacebook</extends>
      <name>Facebook</name>
      <full_name>\Facebook</full_name>
      <docblock line="20">
        <description><![CDATA[Extends the BaseFacebook class with the intent of using
PHP sessions to store user ids and access tokens.]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
      <property final="false" static="true" visibility="protected" line="42" namespace="global" package="Default">
        <name>$kSupportedKeys</name>
        <default><![CDATA[array('state', 'code', 'access_token', 'user_id')]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="35" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="26">
          <description><![CDATA[Identical to the parent constructor, except that
we start a PHP session to store the user ID and
access token if during the course of execution
we discover them.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="param" description="the application configuration." type="Array" variable="$config">
            <type by_reference="false">Array</type>
          </tag>
          <tag line="26" name="see" description="\global\BaseFacebook::__construct" refers="\global\BaseFacebook::__construct"/>
        </docblock>
        <argument line="35">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="51" package="Default">
        <name>setPersistentData</name>
        <full_name>setPersistentData</full_name>
        <docblock line="45">
          <description><![CDATA[Provides the implementations of the inherited abstract
methods.]]></description>
          <long-description><![CDATA[<p>The implementation uses PHP sessions to maintain
a store for authorization codes, user ids, CSRF states, and
access tokens.</p>]]></long-description>
        </docblock>
        <argument line="51">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="51">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="61" package="Default">
        <name>getPersistentData</name>
        <full_name>getPersistentData</full_name>
        <argument line="61">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="61">
          <name>$default</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="72" package="Default">
        <name>clearPersistentData</name>
        <full_name>clearPersistentData</full_name>
        <argument line="72">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="82" package="Default">
        <name>clearAllPersistentData</name>
        <full_name>clearAllPersistentData</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="88" package="Default">
        <name>constructSessionVariableName</name>
        <full_name>constructSessionVariableName</full_name>
        <argument line="88">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\thirdparty\Facebook\facebook.php</error>
      <error line="42" code="50018">No DocBlock was found for property $kSupportedKeys</error>
      <error line="45" code="50015">Argument $key is missing from the Docblock of setPersistentData()</error>
      <error line="45" code="50015">Argument $value is missing from the Docblock of setPersistentData()</error>
      <error line="61" code="50010">No DocBlock was found for method getPersistentData()</error>
      <error line="72" code="50010">No DocBlock was found for method clearPersistentData()</error>
      <error line="82" code="50010">No DocBlock was found for method clearAllPersistentData()</error>
      <error line="88" code="50010">No DocBlock was found for method constructSessionVariableName()</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\thirdparty\LinkedIn\LinkedIn.php" hash="9e37ce72b74ec38cb8ab3fb7f566084f" package="Default">
    <docblock line="5">
      <description><![CDATA[This file defines the 'LinkedIn' class.]]></description>
      <long-description><![CDATA[<p>This class is designed to be a
simple, stand-alone implementation of the LinkedIn API functions.</p>

<p>COPYRIGHT:</p>

<p>Copyright (C) 2011, fiftyMission Inc.</p>

<p>Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:</p>

<p>The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.</p>

<p>THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
IN THE SOFTWARE.</p>

<p>SOURCE CODE LOCATION:</p>

<p>http://code.google.com/p/simple-linkedinphp/</p>

<p>REQUIREMENTS:</p>

<ol>
<li>You must have cURL installed on the server and available to PHP.</li>
<li>You must be running PHP 5+.</li>
</ol>

<p>QUICK START:</p>

<p>There are two files needed to enable LinkedIn API functionality from PHP; the
stand-alone OAuth library, and this LinkedIn class. The latest version of
the stand-alone OAuth library can be found on Google Code:</p>

<p>http://code.google.com/p/oauth/</p>

<p>Install these two files on your server in a location that is accessible to
the scripts you wish to use them in. Make sure to change the file
permissions such that your web server can read the files.</p>

<p>Next, make sure the path to the OAuth library is correct (you can change this
as needed, depending on your file organization scheme, etc).</p>

<p>Finally, test the class by attempting to connect to LinkedIn using the
associated demo.php page, also located at the Google Code location
referenced above.</p>

<p>RESOURCES:</p>

<p>REST API Documentation: http://developer.linkedin.com/rest</p>]]></long-description>
      <tag line="5" name="version" description="3.2.0 - November 8, 2011"/>
      <tag line="5" name="author" description="Paul Mennega &lt;paul@fiftymission.net&gt;"/>
      <tag line="5" name="copyright" description="Copyright 2011, fiftyMission Inc."/>
      <tag line="5" name="license" description="http://www.opensource.org/licenses/mit-license.php The MIT License"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="77" package="classpackage">
      <extends>\Exception</extends>
      <name>LinkedInException</name>
      <full_name>\LinkedInException</full_name>
      <docblock line="69">
        <description><![CDATA['LinkedInException' class declaration.]]></description>
        <long-description><![CDATA[<p>This class extends the base 'Exception' class.</p>]]></long-description>
        <tag line="69" name="access" description="public"/>
        <tag line="69" name="package" description="classpackage"/>
      </docblock>
    </class>
    <class final="false" abstract="false" namespace="global" line="87" package="classpackage">
      <extends/>
      <name>LinkedIn</name>
      <full_name>\LinkedIn</full_name>
      <docblock line="79">
        <description><![CDATA['LinkedIn' class declaration.]]></description>
        <long-description><![CDATA[<p>This class provides generalized LinkedIn oauth functionality.</p>]]></long-description>
        <tag line="79" name="access" description="public"/>
        <tag line="79" name="package" description="classpackage"/>
      </docblock>
      <constant namespace="global" line="89" package="classpackage">
        <name>_API_OAUTH_REALM</name>
        <full_name>_API_OAUTH_REALM</full_name>
        <value><![CDATA['http://api.linkedin.com']]></value>
      </constant>
      <constant namespace="global" line="90" package="classpackage">
        <name>_API_OAUTH_VERSION</name>
        <full_name>_API_OAUTH_VERSION</full_name>
        <value><![CDATA['1.0']]></value>
      </constant>
      <constant namespace="global" line="93" package="classpackage">
        <name>_DEFAULT_RESPONSE_FORMAT</name>
        <full_name>_DEFAULT_RESPONSE_FORMAT</full_name>
        <value><![CDATA['xml']]></value>
      </constant>
      <constant namespace="global" line="96" package="classpackage">
        <name>_GET_RESPONSE</name>
        <full_name>_GET_RESPONSE</full_name>
        <value><![CDATA['lResponse']]></value>
      </constant>
      <constant namespace="global" line="97" package="classpackage">
        <name>_GET_TYPE</name>
        <full_name>_GET_TYPE</full_name>
        <value><![CDATA['lType']]></value>
      </constant>
      <constant namespace="global" line="100" package="classpackage">
        <name>_INV_SUBJECT</name>
        <full_name>_INV_SUBJECT</full_name>
        <value><![CDATA['Invitation to connect']]></value>
      </constant>
      <constant namespace="global" line="101" package="classpackage">
        <name>_INV_BODY_LENGTH</name>
        <full_name>_INV_BODY_LENGTH</full_name>
        <value><![CDATA[200]]></value>
      </constant>
      <constant namespace="global" line="104" package="classpackage">
        <name>_METHOD_TOKENS</name>
        <full_name>_METHOD_TOKENS</full_name>
        <value><![CDATA['POST']]></value>
      </constant>
      <constant namespace="global" line="107" package="classpackage">
        <name>_NETWORK_LENGTH</name>
        <full_name>_NETWORK_LENGTH</full_name>
        <value><![CDATA[1000]]></value>
      </constant>
      <constant namespace="global" line="108" package="classpackage">
        <name>_NETWORK_HTML</name>
        <full_name>_NETWORK_HTML</full_name>
        <value><![CDATA['<a>']]></value>
      </constant>
      <constant namespace="global" line="111" package="classpackage">
        <name>_RESPONSE_JSON</name>
        <full_name>_RESPONSE_JSON</full_name>
        <value><![CDATA['JSON']]></value>
      </constant>
      <constant namespace="global" line="112" package="classpackage">
        <name>_RESPONSE_JSONP</name>
        <full_name>_RESPONSE_JSONP</full_name>
        <value><![CDATA['JSONP']]></value>
      </constant>
      <constant namespace="global" line="113" package="classpackage">
        <name>_RESPONSE_XML</name>
        <full_name>_RESPONSE_XML</full_name>
        <value><![CDATA['XML']]></value>
      </constant>
      <constant namespace="global" line="116" package="classpackage">
        <name>_SHARE_COMMENT_LENGTH</name>
        <full_name>_SHARE_COMMENT_LENGTH</full_name>
        <value><![CDATA[700]]></value>
      </constant>
      <constant namespace="global" line="117" package="classpackage">
        <name>_SHARE_CONTENT_TITLE_LENGTH</name>
        <full_name>_SHARE_CONTENT_TITLE_LENGTH</full_name>
        <value><![CDATA[200]]></value>
      </constant>
      <constant namespace="global" line="118" package="classpackage">
        <name>_SHARE_CONTENT_DESC_LENGTH</name>
        <full_name>_SHARE_CONTENT_DESC_LENGTH</full_name>
        <value><![CDATA[400]]></value>
      </constant>
      <constant namespace="global" line="121" package="classpackage">
        <name>_URL_ACCESS</name>
        <full_name>_URL_ACCESS</full_name>
        <value><![CDATA['https://api.linkedin.com/uas/oauth/accessToken']]></value>
      </constant>
      <constant namespace="global" line="122" package="classpackage">
        <name>_URL_API</name>
        <full_name>_URL_API</full_name>
        <value><![CDATA['https://api.linkedin.com']]></value>
      </constant>
      <constant namespace="global" line="123" package="classpackage">
        <name>_URL_AUTH</name>
        <full_name>_URL_AUTH</full_name>
        <value><![CDATA['https://www.linkedin.com/uas/oauth/authenticate?oauth_token=']]></value>
      </constant>
      <constant namespace="global" line="124" package="classpackage">
        <name>_URL_REQUEST</name>
        <full_name>_URL_REQUEST</full_name>
        <value><![CDATA['https://api.linkedin.com/uas/oauth/requestToken']]></value>
      </constant>
      <constant namespace="global" line="125" package="classpackage">
        <name>_URL_REVOKE</name>
        <full_name>_URL_REVOKE</full_name>
        <value><![CDATA['https://api.linkedin.com/uas/oauth/invalidateToken']]></value>
      </constant>
      <constant namespace="global" line="128" package="classpackage">
        <name>_VERSION</name>
        <full_name>_VERSION</full_name>
        <value><![CDATA['3.2.0']]></value>
      </constant>
      <property final="false" static="false" visibility="protected" line="131" namespace="global" package="Default">
        <name>$callback</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="132" namespace="global" package="Default">
        <name>$token</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="135" namespace="global" package="Default">
        <name>$application_key</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="136" namespace="global" package="Default">
        <name>$application_secret</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="139" namespace="global" package="Default">
        <name>$response_format</name>
        <default><![CDATA[self::_DEFAULT_RESPONSE_FORMAT]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="142" namespace="global" package="Default">
        <name>$last_request_headers</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="143" namespace="global" package="Default">
        <name>$last_request_url</name>
        <default><![CDATA[]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="158" package="classpackage">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="145">
          <description><![CDATA[Create a LinkedIn object, used for OAuth-based authentication and
communication with the LinkedIn API.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="145" name="param" description="The 'start-up' object properties: - appKey =&gt; The application's API key - appSecret =&gt; The application's secret key - callbackUrl =&gt; [OPTIONAL] the callback URL" type="\arr" variable="$config">
            <type by_reference="false">\arr</type>
          </tag>
          <tag line="145" name="return" description="A new LinkedIn object." type="\obj">
            <type by_reference="false">\obj</type>
          </tag>
        </docblock>
        <argument line="158">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="173" package="classpackage">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
        <docblock line="168">
          <description><![CDATA[The class destructor.]]></description>
          <long-description><![CDATA[<p>Explicitly clears LinkedIn object from memory upon destruction.</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="191" package="classpackage">
        <name>bookmarkJob</name>
        <full_name>bookmarkJob</full_name>
        <docblock line="177">
          <description><![CDATA[Bookmark a job.]]></description>
          <long-description><![CDATA[<p>Calling this method causes the current user to add a bookmark for the
specified job:</p>

<p>http://developer.linkedin.com/docs/DOC-1323</p>]]></long-description>
          <tag line="177" name="param" description="Job ID you want to bookmark." type="\str" variable="$jid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="177" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="191">
          <name>$jid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="219" package="classpackage">
        <name>bookmarkedJobs</name>
        <full_name>bookmarkedJobs</full_name>
        <docblock line="209">
          <description><![CDATA[Get list of jobs you have bookmarked.]]></description>
          <long-description><![CDATA[<p>Returns a list of jobs the current user has bookmarked, per:</p>

<p>http://developer.linkedin.com/docs/DOC-1323</p>]]></long-description>
          <tag line="209" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="234" package="classpackage">
        <name>intWalker</name>
        <full_name>intWalker</full_name>
        <docblock line="231">
          <description><![CDATA[Custom addition to make code compatible with PHP 5.2]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="234">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="234">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="253" package="classpackage">
        <name>checkResponse</name>
        <full_name>checkResponse</full_name>
        <docblock line="240">
          <description><![CDATA[Used to check whether a response LinkedIn object has the required http_code or not and
returns an appropriate LinkedIn object.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="240" name="param" description="The required http response from LinkedIn, passed in either as an integer, or an array of integers representing the expected values." type="\var" variable="$http_code_required">
            <type by_reference="false">\var</type>
          </tag>
          <tag line="240" name="param" description="An array containing a LinkedIn response." type="\arr" variable="$response">
            <type by_reference="false">\arr</type>
          </tag>
          <tag line="240" name="return" description="TRUE or FALSE depending on if the passed LinkedIn response matches the expected response." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="253">
          <name>$http_code_required</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="253">
          <name>$response</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="293" package="classpackage">
        <name>closeJob</name>
        <full_name>closeJob</full_name>
        <docblock line="280">
          <description><![CDATA[Close a job.]]></description>
          <long-description><![CDATA[<p>Calling this method causes the passed job to be closed, per:</p>

<p>http://developer.linkedin.com/docs/DOC-1151</p>]]></long-description>
          <tag line="280" name="param" description="Job ID you want to close." type="\str" variable="$jid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="280" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="293">
          <name>$jid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="327" package="classpackage">
        <name>comment</name>
        <full_name>comment</full_name>
        <docblock line="311">
          <description><![CDATA[Share comment posting method.]]></description>
          <long-description><![CDATA[<p>Post a comment on an existing connections shared content. API details can
be found here:</p>

<p>http://developer.linkedin.com/docs/DOC-1043</p>]]></long-description>
          <tag line="311" name="param" description="The LinkedIn update ID." type="\str" variable="$uid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="311" name="param" description="The share comment to be posted." type="\str" variable="$comment">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="311" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="327">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="327">
          <name>$comment</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="374" package="classpackage">
        <name>comments</name>
        <full_name>comments</full_name>
        <docblock line="361">
          <description><![CDATA[Share comment retrieval.]]></description>
          <long-description><![CDATA[<p>Return all comments associated with a given network update:</p>

<p>http://developer.linkedin.com/docs/DOC-1043</p>]]></long-description>
          <tag line="361" name="param" description="The LinkedIn update ID." type="\str" variable="$uid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="361" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="374">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="410" package="classpackage">
        <name>company</name>
        <full_name>company</full_name>
        <docblock line="392">
          <description><![CDATA[Company profile retrieval function.]]></description>
          <long-description><![CDATA[<p>Takes a string of parameters as input and requests company profile data
from the LinkedIn Company Profile API. See the official documentation for
$options 'field selector' formatting:</p>

<p>http://developer.linkedin.com/docs/DOC-1014
  http://developer.linkedin.com/docs/DOC-1259</p>]]></long-description>
          <tag line="392" name="param" description="Data retrieval options." type="\str" variable="$options">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="392" name="param" description="[OPTIONAL] Search by email domain?" type="bool" variable="$by_email">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="392" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="410">
          <name>$options</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="410">
          <name>$by_email</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="449" package="classpackage">
        <name>companyProducts</name>
        <full_name>companyProducts</full_name>
        <docblock line="432">
          <description><![CDATA[Company products and their associated recommendations.]]></description>
          <long-description><![CDATA[<p>The product data type contains details about a company's product or
service, including recommendations from LinkedIn members, and replies from
company representatives.</p>

<p>http://developer.linkedin.com/docs/DOC-1327</p>]]></long-description>
          <tag line="432" name="param" description="Company ID you want the producte for." type="\str" variable="$cid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="432" name="param" description="[OPTIONAL] Data retrieval options." type="\str" variable="$options">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="432" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="449">
          <name>$cid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="449">
          <name>$options</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="486" package="classpackage">
        <name>connections</name>
        <full_name>connections</full_name>
        <docblock line="471">
          <description><![CDATA[Connection retrieval function.]]></description>
          <long-description><![CDATA[<p>Takes a string of parameters as input and requests connection-related data
from the Linkedin Connections API. See the official documentation for
$options 'field selector' formatting:</p>

<p>http://developer.linkedin.com/docs/DOC-1014</p>]]></long-description>
          <tag line="471" name="param" description="[OPTIONAL] Data retrieval options." type="\str" variable="$options">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="471" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="486">
          <name>$options</name>
          <default><![CDATA['~/connections']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="519" package="classpackage">
        <name>createPost</name>
        <full_name>createPost</full_name>
        <docblock line="504">
          <description><![CDATA[This creates a post in the specified group with the specified title and specified summary.]]></description>
          <long-description><![CDATA[<p>http://developer.linkedin.com/documents/groups-api</p>]]></long-description>
          <tag line="504" name="param" description="The group id." type="\str" variable="$gid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="504" name="param" description="The title of the post. This must be non-empty." type="\str" variable="$title">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="504" name="param" description="[OPTIONAL] The content or summary of the post. This can be empty." type="\str" variable="$summary">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="504" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="519">
          <name>$gid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="519">
          <name>$title</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="519">
          <name>$summary</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="560" package="classpackage">
        <name>deletePost</name>
        <full_name>deletePost</full_name>
        <docblock line="548">
          <description><![CDATA[This deletes the specified post if you are the owner or moderator that post.]]></description>
          <long-description><![CDATA[<p>Otherwise, it just flags the post as inappropriate.</p>

<p>https://developer.linkedin.com/documents/groups-api</p>]]></long-description>
          <tag line="548" name="param" description="The post id." type="\str" variable="$pid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="548" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="560">
          <name>$pid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="593" package="classpackage">
        <name>editJob</name>
        <full_name>editJob</full_name>
        <docblock line="576">
          <description><![CDATA[Edit a job.]]></description>
          <long-description><![CDATA[<p>Calling this method causes the passed job to be edited, with the passed
XML instructing which fields to change, per:</p>

<p>http://developer.linkedin.com/docs/DOC-1154
  http://developer.linkedin.com/docs/DOC-1142</p>]]></long-description>
          <tag line="576" name="param" description="Job ID you want to renew." type="\str" variable="$jid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="576" name="param" description="The XML containing the job fields to edit." type="\str" variable="$xml">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="576" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="593">
          <name>$jid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="593">
          <name>$xml</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="638" package="classpackage">
        <name>fetch</name>
        <full_name>fetch</full_name>
        <docblock line="617">
          <description><![CDATA[General data send/request method.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="617" name="param" description="The data communication method." type="\str" variable="$method">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="617" name="param" description="The Linkedin API endpoint to connect with." type="\str" variable="$url">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="617" name="param" description="[OPTIONAL] The data to send to LinkedIn." type="\str" variable="$data">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="617" name="param" description="[OPTIONAL] Addition OAuth parameters to send to LinkedIn." type="\arr" variable="$parameters">
            <type by_reference="false">\arr</type>
          </tag>
          <tag line="617" name="return" description="Array containing: array( 'info' =&gt; Connection information, 'linkedin' =&gt; LinkedIn response, 'oauth' =&gt; The OAuth request string that was sent to LinkedIn )" type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="638">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="638">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="638">
          <name>$data</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="638">
          <name>$parameters</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="732" package="classpackage">
        <name>flagPost</name>
        <full_name>flagPost</full_name>
        <docblock line="719">
          <description><![CDATA[This flags a specified post as specified by type.]]></description>
          <long-description><![CDATA[<p>http://developer.linkedin.com/documents/groups-api</p>]]></long-description>
          <tag line="719" name="param" description="The post id." type="\str" variable="$pid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="719" name="param" description="The type to flag the post as." type="\str" variable="$type">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="719" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="732">
          <name>$pid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="732">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="778" package="classpackage">
        <name>followCompany</name>
        <full_name>followCompany</full_name>
        <docblock line="764">
          <description><![CDATA[Follow a company.]]></description>
          <long-description><![CDATA[<p>Calling this method causes the current user to start following the
specified company, per:</p>

<p>http://developer.linkedin.com/docs/DOC-1324</p>]]></long-description>
          <tag line="764" name="param" description="Company ID you want to follow." type="\str" variable="$cid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="764" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="778">
          <name>$cid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="810" package="classpackage">
        <name>followPost</name>
        <full_name>followPost</full_name>
        <docblock line="796">
          <description><![CDATA[Follows/Unfollows the specified post.]]></description>
          <long-description><![CDATA[<p>https://developer.linkedin.com/documents/groups-api</p>]]></long-description>
          <tag line="796" name="param" description="The post id." type="\str" variable="$pid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="796" name="param" description="Determines whether to follow or unfollow the post. TRUE = follow, FALSE = unfollow" type="bool" variable="$follow">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="796" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="810">
          <name>$pid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="810">
          <name>$follow</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="843" package="classpackage">
        <name>followedCompanies</name>
        <full_name>followedCompanies</full_name>
        <docblock line="833">
          <description><![CDATA[Get list of companies you follow.]]></description>
          <long-description><![CDATA[<p>Returns a list of companies the current user is currently following, per:</p>

<p>http://developer.linkedin.com/docs/DOC-1324</p>]]></long-description>
          <tag line="833" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="861" package="classpackage">
        <name>getApplicationKey</name>
        <full_name>getApplicationKey</full_name>
        <docblock line="855">
          <description><![CDATA[Get the application_key property.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="855" name="return" description="The application key." type="\str">
            <type by_reference="false">\str</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="871" package="classpackage">
        <name>getApplicationSecret</name>
        <full_name>getApplicationSecret</full_name>
        <docblock line="865">
          <description><![CDATA[Get the application_secret property.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="865" name="return" description="The application secret." type="\str">
            <type by_reference="false">\str</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="881" package="classpackage">
        <name>getCallbackUrl</name>
        <full_name>getCallbackUrl</full_name>
        <docblock line="875">
          <description><![CDATA[Get the callback property.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="875" name="return" description="The callback url." type="\str">
            <type by_reference="false">\str</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="891" package="classpackage">
        <name>getResponseFormat</name>
        <full_name>getResponseFormat</full_name>
        <docblock line="885">
          <description><![CDATA[Get the response_format property.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="885" name="return" description="The response format." type="\str">
            <type by_reference="false">\str</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="901" package="classpackage">
        <name>getToken</name>
        <full_name>getToken</full_name>
        <docblock line="895">
          <description><![CDATA[Get the token_access property.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="895" name="return" description="The access token." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="911" package="classpackage">
        <name>getTokenAccess</name>
        <full_name>getTokenAccess</full_name>
        <docblock line="905">
          <description><![CDATA[[DEPRECATED] Get the token_access property.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="905" name="return" description="The access token." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="931" package="classpackage">
        <name>group</name>
        <full_name>group</full_name>
        <docblock line="915">
          <description><![CDATA[Get information about a specific group.]]></description>
          <long-description><![CDATA[<p>http://developer.linkedin.com/documents/groups-api</p>]]></long-description>
          <tag line="915" name="param" description="The group id." type="\str" variable="$gid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="915" name="param" description="[OPTIONAL] Field selectors for the group." type="\str" variable="$options">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="915" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="931">
          <name>$gid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="931">
          <name>$options</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="961" package="classpackage">
        <name>groupMemberships</name>
        <full_name>groupMemberships</full_name>
        <docblock line="950">
          <description><![CDATA[This returns all the groups the user is a member of.]]></description>
          <long-description><![CDATA[<p>http://developer.linkedin.com/documents/groups-api</p>]]></long-description>
          <tag line="950" name="param" description="[OPTIONAL] Field selectors for the groups." type="\str" variable="$options">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="950" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="961">
          <name>$options</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="990" package="classpackage">
        <name>groupPost</name>
        <full_name>groupPost</full_name>
        <docblock line="977">
          <description><![CDATA[This gets a specified post made within a group.]]></description>
          <long-description><![CDATA[<p>http://developer.linkedin.com/documents/groups-api</p>]]></long-description>
          <tag line="977" name="param" description="The post id." type="\str" variable="$pid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="977" name="param" description="[OPTIONAL] Field selectors for the post." type="\str" variable="$options">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="977" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="990">
          <name>$pid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="990">
          <name>$options</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1022" package="classpackage">
        <name>groupPostComments</name>
        <full_name>groupPostComments</full_name>
        <docblock line="1009">
          <description><![CDATA[This returns all the comments made on the specified post within a group.]]></description>
          <long-description><![CDATA[<p>http://developer.linkedin.com/documents/groups-api</p>]]></long-description>
          <tag line="1009" name="param" description="The post id." type="\str" variable="$pid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1009" name="param" description="[OPTIONAL] Field selectors for the post comments." type="\str" variable="$options">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1009" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="1022">
          <name>$pid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1022">
          <name>$options</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1052" package="classpackage">
        <name>groupPosts</name>
        <full_name>groupPosts</full_name>
        <docblock line="1041">
          <description><![CDATA[This returns all the posts within a group.]]></description>
          <long-description><![CDATA[<p>http://developer.linkedin.com/documents/groups-api</p>]]></long-description>
          <tag line="1041" name="param" description="The group id." type="\str" variable="$gid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1041" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="1052">
          <name>$gid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1052">
          <name>$options</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1084" package="classpackage">
        <name>groupSettings</name>
        <full_name>groupSettings</full_name>
        <docblock line="1071">
          <description><![CDATA[This returns the group settings of the specified group]]></description>
          <long-description><![CDATA[<p>http://developer.linkedin.com/documents/groups-api</p>]]></long-description>
          <tag line="1071" name="param" description="The group id." type="\str" variable="$gid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1071" name="param" description="[OPTIONAL] Field selectors for the group." type="\str" variable="$options">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1071" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="1084">
          <name>$gid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1084">
          <name>$options</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1125" package="classpackage">
        <name>invite</name>
        <full_name>invite</full_name>
        <docblock line="1103">
          <description><![CDATA[Send connection invitations.]]></description>
          <long-description><![CDATA[<p>Send an invitation to connect to your network, either by email address or
by LinkedIn ID. Details on the API here:</p>

<p>http://developer.linkedin.com/docs/DOC-1012</p>]]></long-description>
          <tag line="1103" name="param" description="The invitation method to process." type="\str" variable="$method">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1103" name="param" description="The email/id to send the invitation to." type="\str" variable="$recipient">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1103" name="param" description="The subject of the invitation to send." type="\str" variable="$subject">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1103" name="param" description="The body of the invitation to send." type="\str" variable="$body">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1103" name="param" description="[OPTIONAL] The invitation request type (only friend is supported at this time by the Invite API)." type="\str" variable="$type">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1103" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="1125">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1125">
          <name>$recipient</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1125">
          <name>$subject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1125">
          <name>$body</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1125">
          <name>$type</name>
          <default><![CDATA['friend']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1263" package="classpackage">
        <name>isId</name>
        <full_name>isId</full_name>
        <docblock line="1249">
          <description><![CDATA[LinkedIn ID validation.]]></description>
          <long-description><![CDATA[<p>Checks the passed string $id to see if it has a valid LinkedIn ID format,
which is, as of October 15th, 2010:</p>

<p>10 alpha-numeric mixed-case characters, plus underscores and dashes.</p>]]></long-description>
          <tag line="1249" name="param" description="A possible LinkedIn ID." type="\str" variable="$id">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1249" name="return" description="TRUE/FALSE depending on valid ID format determination." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1263">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1295" package="classpackage">
        <name>isThrottled</name>
        <full_name>isThrottled</full_name>
        <docblock line="1281">
          <description><![CDATA[Throttling check.]]></description>
          <long-description><![CDATA[<p>Checks the passed LinkedIn response to see if we have hit a throttling
limit:</p>

<p>http://developer.linkedin.com/docs/DOC-1112</p>]]></long-description>
          <tag line="1281" name="param" description="The LinkedIn response." type="\arr" variable="$response">
            <type by_reference="false">\arr</type>
          </tag>
          <tag line="1281" name="return" description="TRUE/FALSE depending on content of response." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1295">
          <name>$response</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1333" package="classpackage">
        <name>job</name>
        <full_name>job</full_name>
        <docblock line="1315">
          <description><![CDATA[Job posting detail info retrieval function.]]></description>
          <long-description><![CDATA[<p>The Jobs API returns detailed information about job postings on LinkedIn.
Find the job summary, description, location, and apply our professional graph
to present the relationship between the current member and the job poster or
hiring manager.</p>

<p>http://developer.linkedin.com/docs/DOC-1322</p>]]></long-description>
          <tag line="1315" name="param" description="ID of the job you want to look up." type="\str" variable="$jid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1315" name="param" description="[OPTIONAL] Data retrieval options." type="\str" variable="$options">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1315" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="1333">
          <name>$jid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1333">
          <name>$options</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1366" package="classpackage">
        <name>joinGroup</name>
        <full_name>joinGroup</full_name>
        <docblock line="1355">
          <description><![CDATA[Join the specified group, per:]]></description>
          <long-description><![CDATA[<p>http://developer.linkedin.com/documents/groups-api</p>]]></long-description>
          <tag line="1355" name="param" description="The group id." type="\str" variable="$gid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1355" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="1366">
          <name>$gid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1397" package="classpackage">
        <name>lastRequestHeader</name>
        <full_name>lastRequestHeader</full_name>
        <docblock line="1390">
          <description><![CDATA[Returns the last request header from the previous call to the
LinkedIn API.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1390" name="returns" description="str&#13;&#10;The header, in string format."/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1408" package="classpackage">
        <name>lastRequestUrl</name>
        <full_name>lastRequestUrl</full_name>
        <docblock line="1401">
          <description><![CDATA[Returns the last request url from the previous call to the
LinkedIn API.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1401" name="returns" description="str&#13;&#10;The url, in string format."/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1423" package="classpackage">
        <name>leaveGroup</name>
        <full_name>leaveGroup</full_name>
        <docblock line="1412">
          <description><![CDATA[Leave the specified group, per:.]]></description>
          <long-description><![CDATA[<p>http://developer.linkedin.com/documents/groups-api</p>]]></long-description>
          <tag line="1412" name="param" description="The group id." type="\str" variable="$gid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1412" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="1423">
          <name>$gid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1450" package="classpackage">
        <name>like</name>
        <full_name>like</full_name>
        <docblock line="1439">
          <description><![CDATA[Like another user's network update, per:]]></description>
          <long-description><![CDATA[<p>http://developer.linkedin.com/docs/DOC-1043</p>]]></long-description>
          <tag line="1439" name="param" description="The LinkedIn update ID." type="\str" variable="$uid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1439" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="1450">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1485" package="classpackage">
        <name>likePost</name>
        <full_name>likePost</full_name>
        <docblock line="1472">
          <description><![CDATA[Likes/unlikes the specified post, per:]]></description>
          <long-description><![CDATA[<p>http://developer.linkedin.com/documents/groups-api</p>]]></long-description>
          <tag line="1472" name="param" description="The post id." type="\str" variable="$pid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1472" name="param" description="Determines whether to like or unlike. TRUE = like, FALSE = unlike." type="bool" variable="$like">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1472" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="1485">
          <name>$pid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1485">
          <name>$like</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1521" package="classpackage">
        <name>likes</name>
        <full_name>likes</full_name>
        <docblock line="1508">
          <description><![CDATA[Retrieve network update likes.]]></description>
          <long-description><![CDATA[<p>Return all likes associated with a given network update:</p>

<p>http://developer.linkedin.com/docs/DOC-1043</p>]]></long-description>
          <tag line="1508" name="param" description="The LinkedIn update ID." type="\str" variable="$uid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1508" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="1521">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1559" package="classpackage">
        <name>message</name>
        <full_name>message</full_name>
        <docblock line="1539">
          <description><![CDATA[Connection messaging method.]]></description>
          <long-description><![CDATA[<p>Send a message to your network connection(s), optionally copying yourself.
Full details from LinkedIn on this functionality can be found here:</p>

<p>http://developer.linkedin.com/docs/DOC-1044</p>]]></long-description>
          <tag line="1539" name="param" description="The connection(s) to send the message to." type="\arr" variable="$recipients">
            <type by_reference="false">\arr</type>
          </tag>
          <tag line="1539" name="param" description="The subject of the message to send." type="\str" variable="$subject">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1539" name="param" description="The body of the message to send." type="\str" variable="$body">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1539" name="param" description="[OPTIONAL] Also update the teathered Twitter account." type="bool" variable="$copy_self">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1539" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="1559">
          <name>$recipients</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1559">
          <name>$subject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1559">
          <name>$body</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1559">
          <name>$copy_self</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1623" package="classpackage">
        <name>postJob</name>
        <full_name>postJob</full_name>
        <docblock line="1609">
          <description><![CDATA[Job posting method.]]></description>
          <long-description><![CDATA[<p>Post a job to LinkedIn, assuming that you have access to this feature.
Full details from LinkedIn on this functionality can be found here:</p>

<p>http://developer.linkedin.com/community/jobs?view=documents</p>]]></long-description>
          <tag line="1609" name="param" description="The XML defining a job to post." type="\str" variable="$xml">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1609" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="1623">
          <name>$xml</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1658" package="classpackage">
        <name>profile</name>
        <full_name>profile</full_name>
        <docblock line="1642">
          <description><![CDATA[General profile retrieval function.]]></description>
          <long-description><![CDATA[<p>Takes a string of parameters as input and requests profile data from the
Linkedin Profile API. See the official documentation for $options
'field selector' formatting:</p>

<p>http://developer.linkedin.com/docs/DOC-1014
  http://developer.linkedin.com/docs/DOC-1002</p>]]></long-description>
          <tag line="1642" name="param" description="[OPTIONAL] Data retrieval options." type="\str" variable="$options">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1642" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="1658">
          <name>$options</name>
          <default><![CDATA['~']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1693" package="classpackage">
        <name>raw</name>
        <full_name>raw</full_name>
        <docblock line="1676">
          <description><![CDATA[Manual API call method, allowing for support for un-implemented API
functionality to be supported.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1676" name="param" description="The data communication method." type="\str" variable="$method">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1676" name="param" description="The Linkedin API endpoint to connect with - should NOT include the leading https://api.linkedin.com/v1." type="\str" variable="$url">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1676" name="param" description="[OPTIONAL] The URL-encoded body data to send to LinkedIn with the request." type="\str" variable="$body">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1676" name="return" description="Array containing retrieval information, LinkedIn response. Note that you must manually check the return code and compare this to the expected API response to determine if the raw call was successful." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="1693">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1693">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1693">
          <name>$body</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1723" package="classpackage">
        <name>removeSuggestedGroup</name>
        <full_name>removeSuggestedGroup</full_name>
        <docblock line="1712">
          <description><![CDATA[This removes the specified group from the group suggestions, per:]]></description>
          <long-description><![CDATA[<p>http://developer.linkedin.com/documents/groups-api</p>]]></long-description>
          <tag line="1712" name="param" description="The group id." type="\str" variable="$gid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1712" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="1723">
          <name>$gid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1754" package="classpackage">
        <name>renewJob</name>
        <full_name>renewJob</full_name>
        <docblock line="1739">
          <description><![CDATA[Renew a job.]]></description>
          <long-description><![CDATA[<p>Calling this method causes the passed job to be renewed, per:</p>

<p>http://developer.linkedin.com/docs/DOC-1154</p>]]></long-description>
          <tag line="1739" name="param" description="Job ID you want to renew." type="\str" variable="$jid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1739" name="param" description="Contract ID that covers the passed Job ID." type="\str" variable="$cid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1739" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="1754">
          <name>$jid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1754">
          <name>$cid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1798" package="classpackage">
        <name>retrieveTokenAccess</name>
        <full_name>retrieveTokenAccess</full_name>
        <docblock line="1783">
          <description><![CDATA[Access token retrieval.]]></description>
          <long-description><![CDATA[<p>Request the user's access token from the Linkedin API.</p>]]></long-description>
          <tag line="1783" name="param" description="The token returned from the user authorization stage." type="\str" variable="$token">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1783" name="param" description="The secret returned from the request token stage." type="\str" variable="$secret">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1783" name="param" description="The verification value from LinkedIn." type="\str" variable="$verifier">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1783" name="return" description="The Linkedin OAuth/http response, in array format." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="1798">
          <name>$token</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1798">
          <name>$secret</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1798">
          <name>$verifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1844" package="classpackage">
        <name>retrieveTokenRequest</name>
        <full_name>retrieveTokenRequest</full_name>
        <docblock line="1836">
          <description><![CDATA[Request token retrieval.]]></description>
          <long-description><![CDATA[<p>Get the request token from the Linkedin API.</p>]]></long-description>
          <tag line="1836" name="return" description="The Linkedin OAuth/http response, in array format." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1890" package="classpackage">
        <name>revoke</name>
        <full_name>revoke</full_name>
        <docblock line="1878">
          <description><![CDATA[User authorization revocation.]]></description>
          <long-description><![CDATA[<p>Revoke the current user's access token, clear the access token's from
current LinkedIn object. The current documentation for this feature is
found in a blog entry from April 29th, 2010:</p>

<p>http://developer.linkedin.com/community/apis/blog/2010/04/29/oauth--now-for-authentication</p>]]></long-description>
          <tag line="1878" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1916" package="classpackage">
        <name>search</name>
        <full_name>search</full_name>
        <docblock line="1901">
          <description><![CDATA[[DEPRECATED] General people search function.]]></description>
          <long-description><![CDATA[<p>Takes a string of parameters as input and requests profile data from the
Linkedin People Search API.  See the official documentation for $options
querystring formatting:</p>

<p>http://developer.linkedin.com/docs/DOC-1191</p>]]></long-description>
          <tag line="1901" name="param" description="[OPTIONAL] Data retrieval options." type="\str" variable="$options">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1901" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="1916">
          <name>$options</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1934" package="classpackage">
        <name>searchCompanies</name>
        <full_name>searchCompanies</full_name>
        <docblock line="1920">
          <description><![CDATA[Company search.]]></description>
          <long-description><![CDATA[<p>Uses the Company Search API to find companies using keywords, industry,
location, or some other criteria. It returns a collection of matching
companies.</p>

<p>http://developer.linkedin.com/docs/DOC-1325</p>]]></long-description>
          <tag line="1920" name="param" description="[OPTIONAL] Search options." type="\str" variable="$options">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1920" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="1934">
          <name>$options</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1967" package="classpackage">
        <name>searchJobs</name>
        <full_name>searchJobs</full_name>
        <docblock line="1952">
          <description><![CDATA[Jobs search.]]></description>
          <long-description><![CDATA[<p>Use the Job Search API to find jobs using keywords, company, location,
or some other criteria. It returns a collection of matching jobs. Each
entry can contain much of the information available on the job listing.</p>

<p>http://developer.linkedin.com/docs/DOC-1321</p>]]></long-description>
          <tag line="1952" name="param" description="[OPTIONAL] Data retrieval options." type="\str" variable="$options">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1952" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="1967">
          <name>$options</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2000" package="classpackage">
        <name>searchPeople</name>
        <full_name>searchPeople</full_name>
        <docblock line="1985">
          <description><![CDATA[General people search function.]]></description>
          <long-description><![CDATA[<p>Takes a string of parameters as input and requests profile data from the
Linkedin People Search API.  See the official documentation for $options
querystring formatting:</p>

<p>http://developer.linkedin.com/docs/DOC-1191</p>]]></long-description>
          <tag line="1985" name="param" description="[OPTIONAL] Data retrieval options." type="\str" variable="$options">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1985" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="2000">
          <name>$options</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2024" package="classpackage">
        <name>setApplicationKey</name>
        <full_name>setApplicationKey</full_name>
        <docblock line="2018">
          <description><![CDATA[Set the application_key property.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2018" name="param" description="The application key." type="\str" variable="$key">
            <type by_reference="false">\str</type>
          </tag>
        </docblock>
        <argument line="2024">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2034" package="classpackage">
        <name>setApplicationSecret</name>
        <full_name>setApplicationSecret</full_name>
        <docblock line="2028">
          <description><![CDATA[Set the application_secret property.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2028" name="param" description="The application secret." type="\str" variable="$secret">
            <type by_reference="false">\str</type>
          </tag>
        </docblock>
        <argument line="2034">
          <name>$secret</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2044" package="classpackage">
        <name>setCallbackUrl</name>
        <full_name>setCallbackUrl</full_name>
        <docblock line="2038">
          <description><![CDATA[Set the callback property.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2038" name="param" description="The callback url." type="\str" variable="$url">
            <type by_reference="false">\str</type>
          </tag>
        </docblock>
        <argument line="2044">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2067" package="classpackage">
        <name>setGroupSettings</name>
        <full_name>setGroupSettings</full_name>
        <docblock line="2048">
          <description><![CDATA[This sets the group settings of the specified group.]]></description>
          <long-description><![CDATA[<p>http://developer.linkedin.com/documents/groups-api</p>]]></long-description>
          <tag line="2048" name="param" description="The group id." type="\str" variable="$gid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="2048" name="param" description="The group settings to set. The settings are: -&lt;show-group-logo-in-profle&gt; -&lt;contact-email&gt; -&lt;email-digest-frequency&gt; -&lt;email-annoucements-from-managers&gt; -&lt;allow-messages-from-members&gt; -&lt;email-for-every-new-post&gt;" type="\str" variable="$xml">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="2048" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="2067">
          <name>$gid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2067">
          <name>$xml</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2092" package="classpackage">
        <name>setResponseFormat</name>
        <full_name>setResponseFormat</full_name>
        <docblock line="2086">
          <description><![CDATA[Set the response_format property.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2086" name="param" description="[OPTIONAL] The response format to specify to LinkedIn." type="\str" variable="$format">
            <type by_reference="false">\str</type>
          </tag>
        </docblock>
        <argument line="2092">
          <name>$format</name>
          <default><![CDATA[self::_DEFAULT_RESPONSE_FORMAT]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2102" package="classpackage">
        <name>setToken</name>
        <full_name>setToken</full_name>
        <docblock line="2096">
          <description><![CDATA[Set the token property.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2096" name="return" description="$token The LinkedIn OAuth token." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="2102">
          <name>$token</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2119" package="classpackage">
        <name>setTokenAccess</name>
        <full_name>setTokenAccess</full_name>
        <docblock line="2113">
          <description><![CDATA[[DEPRECATED] Set the token_access property.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2113" name="return" description="$token_access [OPTIONAL] The LinkedIn OAuth access token." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="2119">
          <name>$token_access</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2148" package="classpackage">
        <name>share</name>
        <full_name>share</full_name>
        <docblock line="2123">
          <description><![CDATA[Post a share.]]></description>
          <long-description><![CDATA[<p>Create a new or reshare another user's shared content. Full details from
LinkedIn on this functionality can be found here:</p>

<p>http://developer.linkedin.com/docs/DOC-1212</p>

<p>$action values: ('new', 'reshare')
  $content format:
    $action = 'new'; $content => ('comment' => 'xxx', 'title' => 'xxx', 'submitted-url' => 'xxx', 'submitted-image-url' => 'xxx', 'description' => 'xxx')
    $action = 'reshare'; $content => ('comment' => 'xxx', 'id' => 'xxx')</p>]]></long-description>
          <tag line="2123" name="param" description="The sharing action to perform." type="\str" variable="$action">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="2123" name="param" description="The share content." type="\str" variable="$content">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="2123" name="param" description="[OPTIONAL] Should we restrict this shared item to connections only?" type="bool" variable="$private">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="2123" name="param" description="[OPTIONAL] Also update the teathered Twitter account." type="bool" variable="$twitter">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="2123" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="2148">
          <name>$action</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2148">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2148">
          <name>$private</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
        <argument line="2148">
          <name>$twitter</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2282" package="classpackage">
        <name>statistics</name>
        <full_name>statistics</full_name>
        <docblock line="2271">
          <description><![CDATA[Network statistics.]]></description>
          <long-description><![CDATA[<p>General network statistics retrieval function, returns the number of connections,
second-connections an authenticated user has. More information here:</p>

<p>http://developer.linkedin.com/docs/DOC-1006</p>]]></long-description>
          <tag line="2271" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2304" package="classpackage">
        <name>suggestedCompanies</name>
        <full_name>suggestedCompanies</full_name>
        <docblock line="2294">
          <description><![CDATA[Companies you may want to follow.]]></description>
          <long-description><![CDATA[<p>Returns a list of companies the current user may want to follow, per:</p>

<p>http://developer.linkedin.com/docs/DOC-1324</p>]]></long-description>
          <tag line="2294" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2324" package="classpackage">
        <name>suggestedGroups</name>
        <full_name>suggestedGroups</full_name>
        <docblock line="2316">
          <description><![CDATA[Retrieves suggested groups for the user, per:]]></description>
          <long-description><![CDATA[<p>http://developer.linkedin.com/documents/groups-api</p>]]></long-description>
          <tag line="2316" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2349" package="classpackage">
        <name>suggestedJobs</name>
        <full_name>suggestedJobs</full_name>
        <docblock line="2336">
          <description><![CDATA[Jobs you may be interested in.]]></description>
          <long-description><![CDATA[<p>Returns a list of jobs the current user may be interested in, per:</p>

<p>http://developer.linkedin.com/docs/DOC-1323</p>]]></long-description>
          <tag line="2336" name="param" description="[OPTIONAL] Data retrieval options." type="\str" variable="$options">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="2336" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="2349">
          <name>$options</name>
          <default><![CDATA[':(jobs)']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2381" package="classpackage">
        <name>unbookmarkJob</name>
        <full_name>unbookmarkJob</full_name>
        <docblock line="2367">
          <description><![CDATA[Unbookmark a job.]]></description>
          <long-description><![CDATA[<p>Calling this method causes the current user to remove a bookmark for the
specified job:</p>

<p>http://developer.linkedin.com/docs/DOC-1323</p>]]></long-description>
          <tag line="2367" name="param" description="Job ID you want to unbookmark." type="\str" variable="$jid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="2367" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="2381">
          <name>$jid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2413" package="classpackage">
        <name>unfollowCompany</name>
        <full_name>unfollowCompany</full_name>
        <docblock line="2399">
          <description><![CDATA[Unfollow a company.]]></description>
          <long-description><![CDATA[<p>Calling this method causes the current user to stop following the specified
company, per:</p>

<p>http://developer.linkedin.com/docs/DOC-1324</p>]]></long-description>
          <tag line="2399" name="param" description="Company ID you want to unfollow." type="\str" variable="$cid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="2399" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="2413">
          <name>$cid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2444" package="classpackage">
        <name>unlike</name>
        <full_name>unlike</full_name>
        <docblock line="2431">
          <description><![CDATA[Unlike a network update.]]></description>
          <long-description><![CDATA[<p>Unlike another user's network update:</p>

<p>http://developer.linkedin.com/docs/DOC-1043</p>]]></long-description>
          <tag line="2431" name="param" description="The LinkedIn update ID." type="\str" variable="$uid">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="2431" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="2444">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2481" package="classpackage">
        <name>updateNetwork</name>
        <full_name>updateNetwork</full_name>
        <docblock line="2466">
          <description><![CDATA[Post network update.]]></description>
          <long-description><![CDATA[<p>Update the user's Linkedin network status. Full details from LinkedIn
on this functionality can be found here:</p>

<p>http://developer.linkedin.com/docs/DOC-1009
  http://developer.linkedin.com/docs/DOC-1009#comment-1077</p>]]></long-description>
          <tag line="2466" name="param" description="The network update." type="\str" variable="$update">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="2466" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="2481">
          <name>$update</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2562" package="classpackage">
        <name>updates</name>
        <full_name>updates</full_name>
        <docblock line="2541">
          <description><![CDATA[General network update retrieval function.]]></description>
          <long-description><![CDATA[<p>Takes a string of parameters as input and requests update-related data
from the Linkedin Network Updates API. See the official documentation for
$options parameter formatting:</p>

<p>http://developer.linkedin.com/docs/DOC-1006</p>

<p>For getting more comments, likes, etc, see here:</p>

<p>http://developer.linkedin.com/docs/DOC-1043</p>]]></long-description>
          <tag line="2541" name="param" description="[OPTIONAL] Data retrieval options." type="\str" variable="$options">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="2541" name="param" description="[OPTIONAL] The LinkedIn ID to restrict the updates for." type="\str" variable="$id">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="2541" name="return" description="Array containing retrieval success, LinkedIn response." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
        </docblock>
        <argument line="2562">
          <name>$options</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="2562">
          <name>$id</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="2599" package="classpackage">
        <name>xmlToArray</name>
        <full_name>xmlToArray</full_name>
        <docblock line="2588">
          <description><![CDATA[Converts passed XML data to an array.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2588" name="param" description="The XML to convert to an array." type="\str" variable="$xml">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="2588" name="return" description="Array containing the XML data." type="\arr">
            <type by_reference="false">\arr</type>
          </tag>
          <tag line="2588" name="return" description="FALSE if passed data cannot be parsed to an array." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="2599">
          <name>$xml</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="706">- add check for NO response (http_code = 0) from cURL</todo>
    </markers>
    <parse_markers>
      <error line="131" code="50018">No DocBlock was found for property $callback</error>
      <error line="132" code="50018">No DocBlock was found for property $token</error>
      <error line="135" code="50018">No DocBlock was found for property $application_key</error>
      <error line="136" code="50018">No DocBlock was found for property $application_secret</error>
      <error line="139" code="50018">No DocBlock was found for property $response_format</error>
      <error line="142" code="50018">No DocBlock was found for property $last_request_headers</error>
      <error line="143" code="50018">No DocBlock was found for property $last_request_url</error>
      <error line="231" code="50015">Argument $value is missing from the Docblock of intWalker()</error>
      <error line="231" code="50015">Argument $key is missing from the Docblock of intWalker()</error>
      <error line="1041" code="50015">Argument $options is missing from the Docblock of groupPosts()</error>
      <error line="2096" code="50015">Argument $token is missing from the Docblock of setToken()</error>
      <error line="2113" code="50015">Argument $token_access is missing from the Docblock of setTokenAccess()</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\thirdparty\OAuth\OAuth.php" hash="fc431d2a58ac4fcc6c89ce1313a241fe" package="Default">
    <class final="false" abstract="false" namespace="global" line="9" package="Default">
      <extends>\Exception</extends>
      <name>OAuthException</name>
      <full_name>\OAuthException</full_name>
    </class>
    <class final="false" abstract="false" namespace="global" line="13" package="Default">
      <extends/>
      <name>OAuthConsumer</name>
      <full_name>\OAuthConsumer</full_name>
      <property final="false" static="false" visibility="public" line="14" namespace="global" package="Default">
        <name>$key</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="15" namespace="global" package="Default">
        <name>$secret</name>
        <default><![CDATA[]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="17" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="17">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="17">
          <name>$secret</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="17">
          <name>$callback_url</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="23" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="28" package="Default">
      <extends/>
      <name>OAuthToken</name>
      <full_name>\OAuthToken</full_name>
      <property final="false" static="false" visibility="public" line="30" namespace="global" package="Default">
        <name>$key</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="31" namespace="global" package="Default">
        <name>$secret</name>
        <default><![CDATA[]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="33">
          <description><![CDATA[key = the token
secret = the token secret]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="37">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="37">
          <name>$secret</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="46" package="Default">
        <name>to_string</name>
        <full_name>to_string</full_name>
        <docblock line="42">
          <description><![CDATA[generates the basic string serialization of a token that a server
would respond to request_token and access_token calls with]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="53" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="62" package="Default">
      <extends/>
      <name>OAuthSignatureMethod</name>
      <full_name>\OAuthSignatureMethod</full_name>
      <docblock line="58">
        <description><![CDATA[A class for implementing a Signature Method
See section 9 ("Signing Requests") in the spec]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="67" package="Default">
        <name>get_name</name>
        <full_name>get_name</full_name>
        <docblock line="63">
          <description><![CDATA[Needs to return the name of the Signature Method (ie HMAC-SHA1)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="63" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="79" package="Default">
        <name>build_signature</name>
        <full_name>build_signature</full_name>
        <docblock line="69">
          <description><![CDATA[Build up the signature
NOTE: The output of this function MUST NOT be urlencoded.]]></description>
          <long-description><![CDATA[<p>the encoding is handled in OAuthRequest when the final
request is serialized</p>]]></long-description>
          <tag line="69" name="param" description="" type="\OAuthRequest" variable="$request">
            <type by_reference="false">\OAuthRequest</type>
          </tag>
          <tag line="69" name="param" description="" type="\OAuthConsumer" variable="$consumer">
            <type by_reference="false">\OAuthConsumer</type>
          </tag>
          <tag line="69" name="param" description="" type="\OAuthToken" variable="$token">
            <type by_reference="false">\OAuthToken</type>
          </tag>
          <tag line="69" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$request</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="79">
          <name>$consumer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="79">
          <name>$token</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="89" package="Default">
        <name>check_signature</name>
        <full_name>check_signature</full_name>
        <docblock line="81">
          <description><![CDATA[Verifies that a given signature is correct]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="81" name="param" description="" type="\OAuthRequest" variable="$request">
            <type by_reference="false">\OAuthRequest</type>
          </tag>
          <tag line="81" name="param" description="" type="\OAuthConsumer" variable="$consumer">
            <type by_reference="false">\OAuthConsumer</type>
          </tag>
          <tag line="81" name="param" description="" type="\OAuthToken" variable="$token">
            <type by_reference="false">\OAuthToken</type>
          </tag>
          <tag line="81" name="param" description="" type="string" variable="$signature">
            <type by_reference="false">string</type>
          </tag>
          <tag line="81" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$request</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="89">
          <name>$consumer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="89">
          <name>$token</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="89">
          <name>$signature</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="118" package="Default">
      <extends>\OAuthSignatureMethod</extends>
      <name>OAuthSignatureMethod_HMAC_SHA1</name>
      <full_name>\OAuthSignatureMethod_HMAC_SHA1</full_name>
      <docblock line="111">
        <description><![CDATA[The HMAC-SHA1 signature method uses the HMAC-SHA1 signature algorithm as defined in [RFC2104]
where the Signature Base String is the text and the key is the concatenated values (each first
encoded per Parameter Encoding) of the Consumer Secret and Token Secret, separated by an '&'
character (ASCII code 38) even if empty.]]></description>
        <long-description><![CDATA[<ul>
<li>Chapter 9.2 ("HMAC-SHA1")</li>
</ul>]]></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="119" package="Default">
        <name>get_name</name>
        <full_name>get_name</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="123" package="Default">
        <name>build_signature</name>
        <full_name>build_signature</full_name>
        <argument line="123">
          <name>$request</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="123">
          <name>$consumer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="123">
          <name>$token</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="144" package="Default">
      <extends>\OAuthSignatureMethod</extends>
      <name>OAuthSignatureMethod_PLAINTEXT</name>
      <full_name>\OAuthSignatureMethod_PLAINTEXT</full_name>
      <docblock line="139">
        <description><![CDATA[The PLAINTEXT method does not provide any security protection and SHOULD only be used
over a secure channel such as HTTPS.]]></description>
        <long-description><![CDATA[<p>It does not use the Signature Base String.
  - Chapter 9.4 ("PLAINTEXT")</p>]]></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="145" package="Default">
        <name>get_name</name>
        <full_name>get_name</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="158" package="Default">
        <name>build_signature</name>
        <full_name>build_signature</full_name>
        <docblock line="149">
          <description><![CDATA[oauth_signature is set to the concatenated encoded values of the Consumer Secret and
Token Secret, separated by a '&' character (ASCII code 38), even if either secret is
empty.]]></description>
          <long-description><![CDATA[<p>The result MUST be encoded again.
  - Chapter 9.4.1 ("Generating Signatures")</p>

<p>Please note that the second encoding MUST NOT happen in the SignatureMethod, as
OAuthRequest handles this!</p>]]></long-description>
        </docblock>
        <argument line="158">
          <name>$request</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="158">
          <name>$consumer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="158">
          <name>$token</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="180" package="Default">
      <extends>\OAuthSignatureMethod</extends>
      <name>OAuthSignatureMethod_RSA_SHA1</name>
      <full_name>\OAuthSignatureMethod_RSA_SHA1</full_name>
      <docblock line="172">
        <description><![CDATA[The RSA-SHA1 signature method uses the RSASSA-PKCS1-v1_5 signature algorithm as defined in
[RFC3447] section 8.2 (more simply known as PKCS#1), using SHA-1 as the hash function for
EMSA-PKCS1-v1_5.]]></description>
        <long-description><![CDATA[<p>It is assumed that the Consumer has provided its RSA public key in a
verified way to the Service Provider, in a manner which is beyond the scope of this
specification.
  - Chapter 9.3 ("RSA-SHA1")</p>]]></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="181" package="Default">
        <name>get_name</name>
        <full_name>get_name</full_name>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="191" package="Default">
        <name>fetch_public_cert</name>
        <full_name>fetch_public_cert</full_name>
        <argument line="191">
          <name>$request</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="197" package="Default">
        <name>fetch_private_cert</name>
        <full_name>fetch_private_cert</full_name>
        <argument line="197">
          <name>$request</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="199" package="Default">
        <name>build_signature</name>
        <full_name>build_signature</full_name>
        <argument line="199">
          <name>$request</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="199">
          <name>$consumer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="199">
          <name>$token</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="218" package="Default">
        <name>check_signature</name>
        <full_name>check_signature</full_name>
        <argument line="218">
          <name>$request</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="218">
          <name>$consumer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="218">
          <name>$token</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="218">
          <name>$signature</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="239" package="Default">
      <extends/>
      <name>OAuthRequest</name>
      <full_name>\OAuthRequest</full_name>
      <property final="false" static="false" visibility="protected" line="240" namespace="global" package="Default">
        <name>$parameters</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="241" namespace="global" package="Default">
        <name>$http_method</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="242" namespace="global" package="Default">
        <name>$http_url</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="244" namespace="global" package="Default">
        <name>$base_string</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="true" visibility="public" line="245" namespace="global" package="Default">
        <name>$version</name>
        <default><![CDATA['1.0']]></default>
      </property>
      <property final="false" static="true" visibility="public" line="246" namespace="global" package="Default">
        <name>$POST_INPUT</name>
        <default><![CDATA['php://input']]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="248" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="248">
          <name>$http_method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="248">
          <name>$http_url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="248">
          <name>$parameters</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="260" package="Default">
        <name>from_request</name>
        <full_name>from_request</full_name>
        <docblock line="257">
          <description><![CDATA[attempt to build up a request from what was passed to the server]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="260">
          <name>$http_method</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="260">
          <name>$http_url</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="260">
          <name>$parameters</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="312" package="Default">
        <name>from_consumer_and_token</name>
        <full_name>from_consumer_and_token</full_name>
        <docblock line="309">
          <description><![CDATA[pretty much a helper function to set up the request]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="312">
          <name>$consumer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="312">
          <name>$token</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="312">
          <name>$http_method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="312">
          <name>$http_url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="312">
          <name>$parameters</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="326" package="Default">
        <name>set_parameter</name>
        <full_name>set_parameter</full_name>
        <argument line="326">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="326">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="326">
          <name>$allow_duplicates</name>
          <default><![CDATA[true]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="341" package="Default">
        <name>get_parameter</name>
        <full_name>get_parameter</full_name>
        <argument line="341">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="345" package="Default">
        <name>get_parameters</name>
        <full_name>get_parameters</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="349" package="Default">
        <name>unset_parameter</name>
        <full_name>unset_parameter</full_name>
        <argument line="349">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="357" package="Default">
        <name>get_signable_parameters</name>
        <full_name>get_signable_parameters</full_name>
        <docblock line="353">
          <description><![CDATA[The request parameters, sorted and concatenated into a normalized string.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="353" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="377" package="Default">
        <name>get_signature_base_string</name>
        <full_name>get_signature_base_string</full_name>
        <docblock line="370">
          <description><![CDATA[Returns the base string of this request]]></description>
          <long-description><![CDATA[<p>The base string defined as the method, the url
and the parameters (normalized), each urlencoded
and the concated with &amp;.</p>]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="392" package="Default">
        <name>get_normalized_http_method</name>
        <full_name>get_normalized_http_method</full_name>
        <docblock line="389">
          <description><![CDATA[just uppercases the http method]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="400" package="Default">
        <name>get_normalized_http_url</name>
        <full_name>get_normalized_http_url</full_name>
        <docblock line="396">
          <description><![CDATA[parses the url and rebuilds it to be
scheme://host/path]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="418" package="Default">
        <name>to_url</name>
        <full_name>to_url</full_name>
        <docblock line="415">
          <description><![CDATA[builds a url usable for a GET request]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="430" package="Default">
        <name>to_postdata</name>
        <full_name>to_postdata</full_name>
        <docblock line="427">
          <description><![CDATA[builds the data one would send in a POST request]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="437" package="Default">
        <name>to_header</name>
        <full_name>to_header</full_name>
        <docblock line="434">
          <description><![CDATA[builds the Authorization: header]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="437">
          <name>$realm</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="461" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="466" package="Default">
        <name>sign_request</name>
        <full_name>sign_request</full_name>
        <argument line="466">
          <name>$signature_method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="466">
          <name>$consumer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="466">
          <name>$token</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="476" package="Default">
        <name>build_signature</name>
        <full_name>build_signature</full_name>
        <argument line="476">
          <name>$signature_method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="476">
          <name>$consumer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="476">
          <name>$token</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="484" package="Default">
        <name>generate_timestamp</name>
        <full_name>generate_timestamp</full_name>
        <docblock line="481">
          <description><![CDATA[util function: current timestamp]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="491" package="Default">
        <name>generate_nonce</name>
        <full_name>generate_nonce</full_name>
        <docblock line="488">
          <description><![CDATA[util function: current nonce]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="499" package="Default">
      <extends/>
      <name>OAuthServer</name>
      <full_name>\OAuthServer</full_name>
      <property final="false" static="false" visibility="protected" line="500" namespace="global" package="Default">
        <name>$timestamp_threshold</name>
        <default><![CDATA[300]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="501" namespace="global" package="Default">
        <name>$version</name>
        <default><![CDATA['1.0']]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="502" namespace="global" package="Default">
        <name>$signature_methods</name>
        <default><![CDATA[array()]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="504" namespace="global" package="Default">
        <name>$data_store</name>
        <default><![CDATA[]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="506" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="506">
          <name>$data_store</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="510" package="Default">
        <name>add_signature_method</name>
        <full_name>add_signature_method</full_name>
        <argument line="510">
          <name>$signature_method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="521" package="Default">
        <name>fetch_request_token</name>
        <full_name>fetch_request_token</full_name>
        <docblock line="517">
          <description><![CDATA[process a request_token request
returns the request token on success]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="521">
          <name>$request</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="542" package="Default">
        <name>fetch_access_token</name>
        <full_name>fetch_access_token</full_name>
        <docblock line="538">
          <description><![CDATA[process an access_token request
returns the access token on success]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="542">
          <name>$request</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="562" package="Default">
        <name>verify_request</name>
        <full_name>verify_request</full_name>
        <docblock line="559">
          <description><![CDATA[verify an api call, checks all the parameters]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="562">
          <name>$request</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="574" package="Default">
        <name>get_version</name>
        <full_name>get_version</full_name>
        <docblock line="571">
          <description><![CDATA[version 1]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="574">
          <name>$request</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="590" package="Default">
        <name>get_signature_method</name>
        <full_name>get_signature_method</full_name>
        <docblock line="587">
          <description><![CDATA[figure out the signature with some defaults]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="590">
          <name>$request</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="615" package="Default">
        <name>get_consumer</name>
        <full_name>get_consumer</full_name>
        <docblock line="612">
          <description><![CDATA[try to find the consumer for the provided request's consumer key]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="615">
          <name>$request</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="635" package="Default">
        <name>get_token</name>
        <full_name>get_token</full_name>
        <docblock line="632">
          <description><![CDATA[try to find the token for the provided request's token key]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="635">
          <name>$request</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="635">
          <name>$consumer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="635">
          <name>$token_type</name>
          <default><![CDATA["access"]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="653" package="Default">
        <name>check_signature</name>
        <full_name>check_signature</full_name>
        <docblock line="649">
          <description><![CDATA[all-in-one function to check the signature on a request
should guess the signature method appropriately]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="653">
          <name>$request</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="653">
          <name>$consumer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="653">
          <name>$token</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="683" package="Default">
        <name>check_timestamp</name>
        <full_name>check_timestamp</full_name>
        <docblock line="680">
          <description><![CDATA[check that the timestamp is new enough]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="683">
          <name>$timestamp</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="701" package="Default">
        <name>check_nonce</name>
        <full_name>check_nonce</full_name>
        <docblock line="698">
          <description><![CDATA[check that the nonce is not repeated]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="701">
          <name>$consumer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="701">
          <name>$token</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="701">
          <name>$nonce</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="701">
          <name>$timestamp</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="721" package="Default">
      <extends/>
      <name>OAuthDataStore</name>
      <full_name>\OAuthDataStore</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="722" package="Default">
        <name>lookup_consumer</name>
        <full_name>lookup_consumer</full_name>
        <argument line="722">
          <name>$consumer_key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="726" package="Default">
        <name>lookup_token</name>
        <full_name>lookup_token</full_name>
        <argument line="726">
          <name>$consumer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="726">
          <name>$token_type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="726">
          <name>$token</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="730" package="Default">
        <name>lookup_nonce</name>
        <full_name>lookup_nonce</full_name>
        <argument line="730">
          <name>$consumer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="730">
          <name>$token</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="730">
          <name>$nonce</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="730">
          <name>$timestamp</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="734" package="Default">
        <name>new_request_token</name>
        <full_name>new_request_token</full_name>
        <argument line="734">
          <name>$consumer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="734">
          <name>$callback</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="738" package="Default">
        <name>new_access_token</name>
        <full_name>new_access_token</full_name>
        <argument line="738">
          <name>$token</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="738">
          <name>$consumer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="738">
          <name>$verifier</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="747" package="Default">
      <extends/>
      <name>OAuthUtil</name>
      <full_name>\OAuthUtil</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="748" package="Default">
        <name>urlencode_rfc3986</name>
        <full_name>urlencode_rfc3986</full_name>
        <argument line="748">
          <name>$input</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="766" package="Default">
        <name>urldecode_rfc3986</name>
        <full_name>urldecode_rfc3986</full_name>
        <argument line="766">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="775" package="Default">
        <name>split_header</name>
        <full_name>split_header</full_name>
        <argument line="775">
          <name>$header</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="775">
          <name>$only_allow_oauth_parameters</name>
          <default><![CDATA[true]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="789" package="Default">
        <name>get_headers</name>
        <full_name>get_headers</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="837" package="Default">
        <name>parse_parameters</name>
        <full_name>parse_parameters</full_name>
        <argument line="837">
          <name>$input</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="866" package="Default">
        <name>build_http_query</name>
        <full_name>build_http_query</full_name>
        <argument line="866">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\thirdparty\OAuth\OAuth.php</error>
      <error line="9" code="50000">No DocBlock was found for \OAuthException</error>
      <error line="13" code="50000">No DocBlock was found for \OAuthConsumer</error>
      <error line="14" code="50018">No DocBlock was found for property $key</error>
      <error line="15" code="50018">No DocBlock was found for property $secret</error>
      <error line="17" code="50010">No DocBlock was found for method __construct()</error>
      <error line="23" code="50010">No DocBlock was found for method __toString()</error>
      <error line="28" code="50000">No DocBlock was found for \OAuthToken</error>
      <error line="30" code="50018">No DocBlock was found for property $key</error>
      <error line="31" code="50018">No DocBlock was found for property $secret</error>
      <error line="33" code="50015">Argument $key is missing from the Docblock of __construct()</error>
      <error line="33" code="50015">Argument $secret is missing from the Docblock of __construct()</error>
      <error line="53" code="50010">No DocBlock was found for method __toString()</error>
      <error line="119" code="50010">No DocBlock was found for method get_name()</error>
      <error line="123" code="50010">No DocBlock was found for method build_signature()</error>
      <error line="145" code="50010">No DocBlock was found for method get_name()</error>
      <error line="149" code="50015">Argument $request is missing from the Docblock of build_signature()</error>
      <error line="149" code="50015">Argument $consumer is missing from the Docblock of build_signature()</error>
      <error line="149" code="50015">Argument $token is missing from the Docblock of build_signature()</error>
      <error line="181" code="50010">No DocBlock was found for method get_name()</error>
      <error line="191" code="50010">No DocBlock was found for method fetch_public_cert()</error>
      <error line="197" code="50010">No DocBlock was found for method fetch_private_cert()</error>
      <error line="199" code="50010">No DocBlock was found for method build_signature()</error>
      <error line="218" code="50010">No DocBlock was found for method check_signature()</error>
      <error line="239" code="50000">No DocBlock was found for \OAuthRequest</error>
      <error line="240" code="50018">No DocBlock was found for property $parameters</error>
      <error line="241" code="50018">No DocBlock was found for property $http_method</error>
      <error line="242" code="50018">No DocBlock was found for property $http_url</error>
      <error line="244" code="50018">No DocBlock was found for property $base_string</error>
      <error line="245" code="50018">No DocBlock was found for property $version</error>
      <error line="246" code="50018">No DocBlock was found for property $POST_INPUT</error>
      <error line="248" code="50010">No DocBlock was found for method __construct()</error>
      <error line="257" code="50015">Argument $http_method is missing from the Docblock of from_request()</error>
      <error line="257" code="50015">Argument $http_url is missing from the Docblock of from_request()</error>
      <error line="257" code="50015">Argument $parameters is missing from the Docblock of from_request()</error>
      <error line="309" code="50015">Argument $consumer is missing from the Docblock of from_consumer_and_token()</error>
      <error line="309" code="50015">Argument $token is missing from the Docblock of from_consumer_and_token()</error>
      <error line="309" code="50015">Argument $http_method is missing from the Docblock of from_consumer_and_token()</error>
      <error line="309" code="50015">Argument $http_url is missing from the Docblock of from_consumer_and_token()</error>
      <error line="309" code="50015">Argument $parameters is missing from the Docblock of from_consumer_and_token()</error>
      <error line="326" code="50010">No DocBlock was found for method set_parameter()</error>
      <error line="341" code="50010">No DocBlock was found for method get_parameter()</error>
      <error line="345" code="50010">No DocBlock was found for method get_parameters()</error>
      <error line="349" code="50010">No DocBlock was found for method unset_parameter()</error>
      <error line="434" code="50015">Argument $realm is missing from the Docblock of to_header()</error>
      <error line="461" code="50010">No DocBlock was found for method __toString()</error>
      <error line="466" code="50010">No DocBlock was found for method sign_request()</error>
      <error line="476" code="50010">No DocBlock was found for method build_signature()</error>
      <error line="499" code="50000">No DocBlock was found for \OAuthServer</error>
      <error line="500" code="50018">No DocBlock was found for property $timestamp_threshold</error>
      <error line="501" code="50018">No DocBlock was found for property $version</error>
      <error line="502" code="50018">No DocBlock was found for property $signature_methods</error>
      <error line="504" code="50018">No DocBlock was found for property $data_store</error>
      <error line="506" code="50010">No DocBlock was found for method __construct()</error>
      <error line="510" code="50010">No DocBlock was found for method add_signature_method()</error>
      <error line="517" code="50015">Argument $request is missing from the Docblock of fetch_request_token()</error>
      <error line="538" code="50015">Argument $request is missing from the Docblock of fetch_access_token()</error>
      <error line="559" code="50015">Argument $request is missing from the Docblock of verify_request()</error>
      <error line="571" code="50015">Argument $request is missing from the Docblock of get_version()</error>
      <error line="587" code="50015">Argument $request is missing from the Docblock of get_signature_method()</error>
      <error line="612" code="50015">Argument $request is missing from the Docblock of get_consumer()</error>
      <error line="632" code="50015">Argument $request is missing from the Docblock of get_token()</error>
      <error line="632" code="50015">Argument $consumer is missing from the Docblock of get_token()</error>
      <error line="632" code="50015">Argument $token_type is missing from the Docblock of get_token()</error>
      <error line="649" code="50015">Argument $request is missing from the Docblock of check_signature()</error>
      <error line="649" code="50015">Argument $consumer is missing from the Docblock of check_signature()</error>
      <error line="649" code="50015">Argument $token is missing from the Docblock of check_signature()</error>
      <error line="680" code="50015">Argument $timestamp is missing from the Docblock of check_timestamp()</error>
      <error line="698" code="50015">Argument $consumer is missing from the Docblock of check_nonce()</error>
      <error line="698" code="50015">Argument $token is missing from the Docblock of check_nonce()</error>
      <error line="698" code="50015">Argument $nonce is missing from the Docblock of check_nonce()</error>
      <error line="698" code="50015">Argument $timestamp is missing from the Docblock of check_nonce()</error>
      <error line="721" code="50000">No DocBlock was found for \OAuthDataStore</error>
      <error line="722" code="50010">No DocBlock was found for method lookup_consumer()</error>
      <error line="726" code="50010">No DocBlock was found for method lookup_token()</error>
      <error line="730" code="50010">No DocBlock was found for method lookup_nonce()</error>
      <error line="734" code="50010">No DocBlock was found for method new_request_token()</error>
      <error line="738" code="50010">No DocBlock was found for method new_access_token()</error>
      <error line="747" code="50000">No DocBlock was found for \OAuthUtil</error>
      <error line="748" code="50010">No DocBlock was found for method urlencode_rfc3986()</error>
      <error line="766" code="50010">No DocBlock was found for method urldecode_rfc3986()</error>
      <error line="775" code="50010">No DocBlock was found for method split_header()</error>
      <error line="789" code="50010">No DocBlock was found for method get_headers()</error>
      <error line="837" code="50010">No DocBlock was found for method parse_parameters()</error>
      <error line="866" code="50010">No DocBlock was found for method build_http_query()</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\thirdparty\OAuth\OAuth1Client.php" hash="88ae09245f29b6f6c4c9c4513780ac40" package="Default">
    <class final="false" abstract="false" namespace="global" line="10" package="Default">
      <extends/>
      <name>OAuth1Client</name>
      <full_name>\OAuth1Client</full_name>
      <property final="false" static="false" visibility="public" line="11" namespace="global" package="Default">
        <name>$api_base_url</name>
        <default><![CDATA[""]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="12" namespace="global" package="Default">
        <name>$authorize_url</name>
        <default><![CDATA[""]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="13" namespace="global" package="Default">
        <name>$authenticate_url</name>
        <default><![CDATA[""]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="14" namespace="global" package="Default">
        <name>$request_token_url</name>
        <default><![CDATA[""]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="15" namespace="global" package="Default">
        <name>$access_token_url</name>
        <default><![CDATA[""]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="17" namespace="global" package="Default">
        <name>$request_token_method</name>
        <default><![CDATA["GET"]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="18" namespace="global" package="Default">
        <name>$access_token_method</name>
        <default><![CDATA["GET"]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="20" namespace="global" package="Default">
        <name>$redirect_uri</name>
        <default><![CDATA[""]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="22" namespace="global" package="Default">
        <name>$decode_json</name>
        <default><![CDATA[true]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="23" namespace="global" package="Default">
        <name>$curl_time_out</name>
        <default><![CDATA[30]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="24" namespace="global" package="Default">
        <name>$curl_connect_time_out</name>
        <default><![CDATA[30]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="25" namespace="global" package="Default">
        <name>$curl_ssl_verifypeer</name>
        <default><![CDATA[false]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$curl_auth_header</name>
        <default><![CDATA[true]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="27" namespace="global" package="Default">
        <name>$curl_useragent</name>
        <default><![CDATA["OAuth/1 Simple PHP Client v0.1; HybridAuth http://hybridauth.sourceforge.net/"]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="31" namespace="global" package="Default">
        <name>$http_code</name>
        <default><![CDATA[""]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="32" namespace="global" package="Default">
        <name>$http_info</name>
        <default><![CDATA[""]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="34">
          <description><![CDATA[OAuth client constructor]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="37">
          <name>$consumer_key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="37">
          <name>$consumer_secret</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="37">
          <name>$oauth_token</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="37">
          <name>$oauth_token_secret</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="53" package="Default">
        <name>authorizeUrl</name>
        <full_name>authorizeUrl</full_name>
        <docblock line="48">
          <description><![CDATA[Build authorize url]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="48" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="53">
          <name>$token</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="53">
          <name>$extras</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="Default">
        <name>requestToken</name>
        <full_name>requestToken</full_name>
        <docblock line="68">
          <description><![CDATA[Get a request_token from provider]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="return" description="a key/value array containing oauth_token and oauth_token_secret" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$callback</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="93" package="Default">
        <name>accessToken</name>
        <full_name>accessToken</full_name>
        <docblock line="88">
          <description><![CDATA[Exchange the request token and secret for an access token and secret, to sign API calls.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="88" name="return" description="array('oauth_token' =&gt; the access token, 'oauth_token_secret' =&gt; the access secret)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$oauth_verifier</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
        <argument line="93">
          <name>$oauth_token</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="112" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="109">
          <description><![CDATA[GET wrappwer for provider apis request]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="112">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="112">
          <name>$parameters</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="120" package="Default">
        <name>post</name>
        <full_name>post</full_name>
        <docblock line="117">
          <description><![CDATA[POST wreapper for provider apis request]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="120">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="120">
          <name>$parameters</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="128" package="Default">
        <name>api</name>
        <full_name>api</full_name>
        <docblock line="125">
          <description><![CDATA[Format and sign an oauth for provider api]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="128">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="128">
          <name>$method</name>
          <default><![CDATA['GET']]></default>
          <type/>
        </argument>
        <argument line="128">
          <name>$parameters</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="146" package="Default">
        <name>signedRequest</name>
        <full_name>signedRequest</full_name>
        <docblock line="143">
          <description><![CDATA[Make signed request]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="146">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="146">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="146">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="159" package="Default">
        <name>request</name>
        <full_name>request</full_name>
        <docblock line="156">
          <description><![CDATA[Make http request]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="159">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="159">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="159">
          <name>$postfields</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="159">
          <name>$auth_header</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="213" package="Default">
        <name>getHeader</name>
        <full_name>getHeader</full_name>
        <docblock line="210">
          <description><![CDATA[Get the header info to store.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="213">
          <name>$ch</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="213">
          <name>$header</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\thirdparty\OAuth\OAuth1Client.php</error>
      <error line="10" code="50000">No DocBlock was found for \OAuth1Client</error>
      <error line="11" code="50018">No DocBlock was found for property $api_base_url</error>
      <error line="12" code="50018">No DocBlock was found for property $authorize_url</error>
      <error line="13" code="50018">No DocBlock was found for property $authenticate_url</error>
      <error line="14" code="50018">No DocBlock was found for property $request_token_url</error>
      <error line="15" code="50018">No DocBlock was found for property $access_token_url</error>
      <error line="17" code="50018">No DocBlock was found for property $request_token_method</error>
      <error line="18" code="50018">No DocBlock was found for property $access_token_method</error>
      <error line="20" code="50018">No DocBlock was found for property $redirect_uri</error>
      <error line="22" code="50018">No DocBlock was found for property $decode_json</error>
      <error line="23" code="50018">No DocBlock was found for property $curl_time_out</error>
      <error line="24" code="50018">No DocBlock was found for property $curl_connect_time_out</error>
      <error line="25" code="50018">No DocBlock was found for property $curl_ssl_verifypeer</error>
      <error line="26" code="50018">No DocBlock was found for property $curl_auth_header</error>
      <error line="27" code="50018">No DocBlock was found for property $curl_useragent</error>
      <error line="31" code="50018">No DocBlock was found for property $http_code</error>
      <error line="32" code="50018">No DocBlock was found for property $http_info</error>
      <error line="34" code="50015">Argument $consumer_key is missing from the Docblock of __construct()</error>
      <error line="34" code="50015">Argument $consumer_secret is missing from the Docblock of __construct()</error>
      <error line="34" code="50015">Argument $oauth_token is missing from the Docblock of __construct()</error>
      <error line="34" code="50015">Argument $oauth_token_secret is missing from the Docblock of __construct()</error>
      <error line="48" code="50015">Argument $token is missing from the Docblock of authorizeUrl()</error>
      <error line="48" code="50015">Argument $extras is missing from the Docblock of authorizeUrl()</error>
      <error line="68" code="50015">Argument $callback is missing from the Docblock of requestToken()</error>
      <error line="88" code="50015">Argument $oauth_verifier is missing from the Docblock of accessToken()</error>
      <error line="88" code="50015">Argument $oauth_token is missing from the Docblock of accessToken()</error>
      <error line="109" code="50015">Argument $url is missing from the Docblock of get()</error>
      <error line="109" code="50015">Argument $parameters is missing from the Docblock of get()</error>
      <error line="117" code="50015">Argument $url is missing from the Docblock of post()</error>
      <error line="117" code="50015">Argument $parameters is missing from the Docblock of post()</error>
      <error line="125" code="50015">Argument $url is missing from the Docblock of api()</error>
      <error line="125" code="50015">Argument $method is missing from the Docblock of api()</error>
      <error line="125" code="50015">Argument $parameters is missing from the Docblock of api()</error>
      <error line="143" code="50015">Argument $url is missing from the Docblock of signedRequest()</error>
      <error line="143" code="50015">Argument $method is missing from the Docblock of signedRequest()</error>
      <error line="143" code="50015">Argument $parameters is missing from the Docblock of signedRequest()</error>
      <error line="156" code="50015">Argument $url is missing from the Docblock of request()</error>
      <error line="156" code="50015">Argument $method is missing from the Docblock of request()</error>
      <error line="156" code="50015">Argument $postfields is missing from the Docblock of request()</error>
      <error line="156" code="50015">Argument $auth_header is missing from the Docblock of request()</error>
      <error line="210" code="50015">Argument $ch is missing from the Docblock of getHeader()</error>
      <error line="210" code="50015">Argument $header is missing from the Docblock of getHeader()</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\thirdparty\OAuth\OAuth2Client.php" hash="e64b1f8778161fc3f33c8dee4a9e3c6a" package="Default">
    <class final="false" abstract="false" namespace="global" line="10" package="Default">
      <extends/>
      <name>OAuth2Client</name>
      <full_name>\OAuth2Client</full_name>
      <property final="false" static="false" visibility="public" line="12" namespace="global" package="Default">
        <name>$api_base_url</name>
        <default><![CDATA[""]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="13" namespace="global" package="Default">
        <name>$authorize_url</name>
        <default><![CDATA[""]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="14" namespace="global" package="Default">
        <name>$token_url</name>
        <default><![CDATA[""]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="15" namespace="global" package="Default">
        <name>$token_info_url</name>
        <default><![CDATA[""]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="17" namespace="global" package="Default">
        <name>$client_id</name>
        <default><![CDATA[""]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="18" namespace="global" package="Default">
        <name>$client_secret</name>
        <default><![CDATA[""]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="19" namespace="global" package="Default">
        <name>$redirect_uri</name>
        <default><![CDATA[""]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="20" namespace="global" package="Default">
        <name>$access_token</name>
        <default><![CDATA[""]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="21" namespace="global" package="Default">
        <name>$refresh_token</name>
        <default><![CDATA[""]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="23" namespace="global" package="Default">
        <name>$access_token_expires_in</name>
        <default><![CDATA[""]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="24" namespace="global" package="Default">
        <name>$access_token_expires_at</name>
        <default><![CDATA[""]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="28" namespace="global" package="Default">
        <name>$sign_token_name</name>
        <default><![CDATA["access_token"]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="29" namespace="global" package="Default">
        <name>$decode_json</name>
        <default><![CDATA[true]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="30" namespace="global" package="Default">
        <name>$curl_time_out</name>
        <default><![CDATA[30]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="31" namespace="global" package="Default">
        <name>$curl_connect_time_out</name>
        <default><![CDATA[30]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="32" namespace="global" package="Default">
        <name>$curl_ssl_verifypeer</name>
        <default><![CDATA[false]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$curl_header</name>
        <default><![CDATA[array()]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="34" namespace="global" package="Default">
        <name>$curl_useragent</name>
        <default><![CDATA["OAuth/2 Simple PHP Client v0.1; HybridAuth http://hybridauth.sourceforge.net/"]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="38" namespace="global" package="Default">
        <name>$http_code</name>
        <default><![CDATA[""]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="39" namespace="global" package="Default">
        <name>$http_info</name>
        <default><![CDATA[""]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="43" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="43">
          <name>$client_id</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
        <argument line="43">
          <name>$client_secret</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
        <argument line="43">
          <name>$redirect_uri</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="Default">
        <name>authorizeUrl</name>
        <full_name>authorizeUrl</full_name>
        <argument line="50">
          <name>$extras</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="65" package="Default">
        <name>authenticate</name>
        <full_name>authenticate</full_name>
        <argument line="65">
          <name>$code</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="92" package="Default">
        <name>authenticated</name>
        <full_name>authenticated</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="122" package="Default">
        <name>api</name>
        <full_name>api</full_name>
        <docblock line="119">
          <description><![CDATA[Format and sign an oauth for provider api]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="122">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="122">
          <name>$method</name>
          <default><![CDATA["GET"]]></default>
          <type/>
        </argument>
        <argument line="122">
          <name>$parameters</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="146" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="143">
          <description><![CDATA[GET wrappwer for provider apis request]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="146">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="146">
          <name>$parameters</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="154" package="Default">
        <name>post</name>
        <full_name>post</full_name>
        <docblock line="151">
          <description><![CDATA[POST wreapper for provider apis request]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="154">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="154">
          <name>$parameters</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="161" package="Default">
        <name>tokenInfo</name>
        <full_name>tokenInfo</full_name>
        <argument line="161">
          <name>$accesstoken</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="168" package="Default">
        <name>refreshToken</name>
        <full_name>refreshToken</full_name>
        <argument line="168">
          <name>$parameters</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="186" package="Default">
        <name>request</name>
        <full_name>request</full_name>
        <argument line="186">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="186">
          <name>$params</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
        <argument line="186">
          <name>$type</name>
          <default><![CDATA["GET"]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="224" package="Default">
        <name>parseRequestResult</name>
        <full_name>parseRequestResult</full_name>
        <argument line="224">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\thirdparty\OAuth\OAuth2Client.php</error>
      <error line="10" code="50000">No DocBlock was found for \OAuth2Client</error>
      <error line="12" code="50018">No DocBlock was found for property $api_base_url</error>
      <error line="13" code="50018">No DocBlock was found for property $authorize_url</error>
      <error line="14" code="50018">No DocBlock was found for property $token_url</error>
      <error line="15" code="50018">No DocBlock was found for property $token_info_url</error>
      <error line="17" code="50018">No DocBlock was found for property $client_id</error>
      <error line="18" code="50018">No DocBlock was found for property $client_secret</error>
      <error line="19" code="50018">No DocBlock was found for property $redirect_uri</error>
      <error line="20" code="50018">No DocBlock was found for property $access_token</error>
      <error line="21" code="50018">No DocBlock was found for property $refresh_token</error>
      <error line="23" code="50018">No DocBlock was found for property $access_token_expires_in</error>
      <error line="24" code="50018">No DocBlock was found for property $access_token_expires_at</error>
      <error line="28" code="50018">No DocBlock was found for property $sign_token_name</error>
      <error line="29" code="50018">No DocBlock was found for property $decode_json</error>
      <error line="30" code="50018">No DocBlock was found for property $curl_time_out</error>
      <error line="31" code="50018">No DocBlock was found for property $curl_connect_time_out</error>
      <error line="32" code="50018">No DocBlock was found for property $curl_ssl_verifypeer</error>
      <error line="33" code="50018">No DocBlock was found for property $curl_header</error>
      <error line="34" code="50018">No DocBlock was found for property $curl_useragent</error>
      <error line="38" code="50018">No DocBlock was found for property $http_code</error>
      <error line="39" code="50018">No DocBlock was found for property $http_info</error>
      <error line="43" code="50010">No DocBlock was found for method __construct()</error>
      <error line="50" code="50010">No DocBlock was found for method authorizeUrl()</error>
      <error line="65" code="50010">No DocBlock was found for method authenticate()</error>
      <error line="92" code="50010">No DocBlock was found for method authenticated()</error>
      <error line="119" code="50015">Argument $url is missing from the Docblock of api()</error>
      <error line="119" code="50015">Argument $method is missing from the Docblock of api()</error>
      <error line="119" code="50015">Argument $parameters is missing from the Docblock of api()</error>
      <error line="143" code="50015">Argument $url is missing from the Docblock of get()</error>
      <error line="143" code="50015">Argument $parameters is missing from the Docblock of get()</error>
      <error line="151" code="50015">Argument $url is missing from the Docblock of post()</error>
      <error line="151" code="50015">Argument $parameters is missing from the Docblock of post()</error>
      <error line="161" code="50010">No DocBlock was found for method tokenInfo()</error>
      <error line="168" code="50010">No DocBlock was found for method refreshToken()</error>
      <error line="186" code="50010">No DocBlock was found for method request()</error>
      <error line="224" code="50010">No DocBlock was found for method parseRequestResult()</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\thirdparty\OpenID\LightOpenID.php" hash="bd2ba996e4b67555aea46a6d0b85cc86" package="Default">
    <class final="false" abstract="false" namespace="global" line="13" package="Default">
      <extends/>
      <name>LightOpenID</name>
      <full_name>\LightOpenID</full_name>
      <docblock line="5">
        <description><![CDATA[This class provides a simple interface for OpenID (1.1 and 2.0) authentication.]]></description>
        <long-description><![CDATA[<p>Supports Yadis discovery.
The library requires PHP >= 5.1.2 with curl or http/https stream wrappers enabled.</p>]]></long-description>
        <tag line="5" name="author" description="Mewp"/>
        <tag line="5" name="copyright" description="Copyright (c) 2010, Mewp"/>
        <tag line="5" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="15" namespace="global" package="Default">
        <name>$returnUrl</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="16" namespace="global" package="Default">
        <name>$required</name>
        <default><![CDATA[array()]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="17" namespace="global" package="Default">
        <name>$optional</name>
        <default><![CDATA[array()]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="18" namespace="global" package="Default">
        <name>$verify_peer</name>
        <default><![CDATA[null]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="19" namespace="global" package="Default">
        <name>$capath</name>
        <default><![CDATA[null]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="20" namespace="global" package="Default">
        <name>$cainfo</name>
        <default><![CDATA[null]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="21" namespace="global" package="Default">
        <name>$data</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="private" line="22" namespace="global" package="Default">
        <name>$identity</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="private" line="22" namespace="global" package="Default">
        <name>$claimed_id</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="23" namespace="global" package="Default">
        <name>$server</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="23" namespace="global" package="Default">
        <name>$version</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="23" namespace="global" package="Default">
        <name>$trustRoot</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="23" namespace="global" package="Default">
        <name>$aliases</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="23" namespace="global" package="Default">
        <name>$identifier_select</name>
        <default><![CDATA[false]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="24" namespace="global" package="Default">
        <name>$ax</name>
        <default><![CDATA[false]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="24" namespace="global" package="Default">
        <name>$sreg</name>
        <default><![CDATA[false]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="24" namespace="global" package="Default">
        <name>$setup_url</name>
        <default><![CDATA[null]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="24" namespace="global" package="Default">
        <name>$headers</name>
        <default><![CDATA[array()]]></default>
      </property>
      <property final="false" static="true" visibility="protected" line="25" namespace="global" package="Default">
        <name>$ax_to_sreg</name>
        <default><![CDATA[array('namePerson/friendly' => 'nickname', 'contact/email' => 'email', 'namePerson' => 'fullname', 'birthDate' => 'dob', 'person/gender' => 'gender', 'contact/postalCode/home' => 'postcode', 'contact/country/home' => 'country', 'pref/language' => 'language', 'pref/timezone' => 'timezone')]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="37">
          <name>$host</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <argument line="61">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="61">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="83">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="105" package="Default">
        <name>hostExists</name>
        <full_name>hostExists</full_name>
        <docblock line="99">
          <description><![CDATA[Checks if the server specified in the url exists.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="99" name="param" description="url to check" type="\$url" variable="$url">
            <type by_reference="false">\$url</type>
          </tag>
          <tag line="99" name="return" description="if the server exists; false otherwise" type="\true,">
            <type by_reference="false">\true,</type>
          </tag>
        </docblock>
        <argument line="105">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="120" package="Default">
        <name>request_curl</name>
        <full_name>request_curl</full_name>
        <argument line="120">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="120">
          <name>$method</name>
          <default><![CDATA['GET']]></default>
          <type/>
        </argument>
        <argument line="120">
          <name>$params</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="120">
          <name>$update_claimed_id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="198" package="Default">
        <name>parse_header_array</name>
        <full_name>parse_header_array</full_name>
        <argument line="198">
          <name>$array</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="198">
          <name>$update_claimed_id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="228" package="Default">
        <name>request_streams</name>
        <full_name>request_streams</full_name>
        <argument line="228">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="228">
          <name>$method</name>
          <default><![CDATA['GET']]></default>
          <type/>
        </argument>
        <argument line="228">
          <name>$params</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="228">
          <name>$update_claimed_id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="318" package="Default">
        <name>request</name>
        <full_name>request</full_name>
        <argument line="318">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="318">
          <name>$method</name>
          <default><![CDATA['GET']]></default>
          <type/>
        </argument>
        <argument line="318">
          <name>$params</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="318">
          <name>$update_claimed_id</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="328" package="Default">
        <name>build_url</name>
        <full_name>build_url</full_name>
        <argument line="328">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="328">
          <name>$parts</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="351" package="Default">
        <name>htmlTag</name>
        <full_name>htmlTag</full_name>
        <docblock line="347">
          <description><![CDATA[Helper function used to scan for <meta>/<link> tags and extract information
from them]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="351">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="351">
          <name>$tag</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="351">
          <name>$attrName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="351">
          <name>$attrValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="351">
          <name>$valueName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="366" package="Default">
        <name>discover</name>
        <full_name>discover</full_name>
        <docblock line="360">
          <description><![CDATA[Performs Yadis and HTML discovery.]]></description>
          <long-description><![CDATA[<p>Normally not used.</p>]]></long-description>
          <tag line="360" name="param" description="Identity URL." type="\$url" variable="$url">
            <type by_reference="false">\$url</type>
          </tag>
          <tag line="360" name="return" description="OP Endpoint (i.e. OpenID provider address)." type="String">
            <type by_reference="false">String</type>
          </tag>
          <tag line="360" name="throws" description="" type="\ErrorException">
            <type by_reference="false">\ErrorException</type>
          </tag>
        </docblock>
        <argument line="366">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="506" package="Default">
        <name>sregParams</name>
        <full_name>sregParams</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="533" package="Default">
        <name>axParams</name>
        <full_name>axParams</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="572" package="Default">
        <name>authUrl_v1</name>
        <full_name>authUrl_v1</full_name>
        <argument line="572">
          <name>$immediate</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="593" package="Default">
        <name>authUrl_v2</name>
        <full_name>authUrl_v2</full_name>
        <argument line="593">
          <name>$immediate</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="631" package="Default">
        <name>authUrl</name>
        <full_name>authUrl</full_name>
        <docblock line="625">
          <description><![CDATA[Returns authentication url.]]></description>
          <long-description><![CDATA[<p>Usually, you want to redirect your user to it.</p>]]></long-description>
          <tag line="625" name="return" description="The authentication url." type="String">
            <type by_reference="false">String</type>
          </tag>
          <tag line="625" name="param" description="Whether to request OP to select identity for an user in OpenID 2. Does not affect OpenID 1." type="String" variable="$select_identifier">
            <type by_reference="false">String</type>
          </tag>
          <tag line="625" name="throws" description="" type="\ErrorException">
            <type by_reference="false">\ErrorException</type>
          </tag>
        </docblock>
        <argument line="631">
          <name>$immediate</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="647" package="Default">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="642">
          <description><![CDATA[Performs OpenID verification with the OP.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="642" name="return" description="Whether the verification was successful." type="Bool">
            <type by_reference="false">Bool</type>
          </tag>
          <tag line="642" name="throws" description="" type="\ErrorException">
            <type by_reference="false">\ErrorException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="709" package="Default">
        <name>getAxAttributes</name>
        <full_name>getAxAttributes</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="756" package="Default">
        <name>getSregAttributes</name>
        <full_name>getSregAttributes</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="784" package="Default">
        <name>getAttributes</name>
        <full_name>getAttributes</full_name>
        <docblock line="775">
          <description><![CDATA[Gets AX/SREG attributes provided by OP.]]></description>
          <long-description><![CDATA[<p>should be used only after successful validaton.
Note that it does not guarantee that any of the required/optional parameters will be present,
or that there will be no other attributes besides those specified.
In other words. OP may provide whatever information it wants to.
    * SREG names will be mapped to AX names.
    * @return Array Array of attributes with keys being the AX schema names, e.g. 'contact/email'</p>]]></long-description>
          <tag line="775" name="see" description="\global\http://www.axschema.org/types/" refers="\global\http://www.axschema.org/types/"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\thirdparty\OpenID\LightOpenID.php</error>
      <error line="15" code="50018">No DocBlock was found for property $returnUrl</error>
      <error line="16" code="50018">No DocBlock was found for property $required</error>
      <error line="17" code="50018">No DocBlock was found for property $optional</error>
      <error line="18" code="50018">No DocBlock was found for property $verify_peer</error>
      <error line="19" code="50018">No DocBlock was found for property $capath</error>
      <error line="20" code="50018">No DocBlock was found for property $cainfo</error>
      <error line="21" code="50018">No DocBlock was found for property $data</error>
      <error line="22" code="50018">No DocBlock was found for property $identity</error>
      <error line="22" code="50018">No DocBlock was found for property $claimed_id</error>
      <error line="23" code="50018">No DocBlock was found for property $server</error>
      <error line="23" code="50018">No DocBlock was found for property $version</error>
      <error line="23" code="50018">No DocBlock was found for property $trustRoot</error>
      <error line="23" code="50018">No DocBlock was found for property $aliases</error>
      <error line="23" code="50018">No DocBlock was found for property $identifier_select</error>
      <error line="24" code="50018">No DocBlock was found for property $ax</error>
      <error line="24" code="50018">No DocBlock was found for property $sreg</error>
      <error line="24" code="50018">No DocBlock was found for property $setup_url</error>
      <error line="24" code="50018">No DocBlock was found for property $headers</error>
      <error line="25" code="50018">No DocBlock was found for property $ax_to_sreg</error>
      <error line="37" code="50010">No DocBlock was found for method __construct()</error>
      <error line="61" code="50010">No DocBlock was found for method __set()</error>
      <error line="83" code="50010">No DocBlock was found for method __get()</error>
      <error line="120" code="50010">No DocBlock was found for method request_curl()</error>
      <error line="198" code="50010">No DocBlock was found for method parse_header_array()</error>
      <error line="228" code="50010">No DocBlock was found for method request_streams()</error>
      <error line="318" code="50010">No DocBlock was found for method request()</error>
      <error line="328" code="50010">No DocBlock was found for method build_url()</error>
      <error line="347" code="50015">Argument $content is missing from the Docblock of htmlTag()</error>
      <error line="347" code="50015">Argument $tag is missing from the Docblock of htmlTag()</error>
      <error line="347" code="50015">Argument $attrName is missing from the Docblock of htmlTag()</error>
      <error line="347" code="50015">Argument $attrValue is missing from the Docblock of htmlTag()</error>
      <error line="347" code="50015">Argument $valueName is missing from the Docblock of htmlTag()</error>
      <error line="506" code="50010">No DocBlock was found for method sregParams()</error>
      <error line="533" code="50010">No DocBlock was found for method axParams()</error>
      <error line="572" code="50010">No DocBlock was found for method authUrl_v1()</error>
      <error line="593" code="50010">No DocBlock was found for method authUrl_v2()</error>
      <error line="625" code="50014">Name of argument $immediate does not match with the DocBlock's name $select_identifier in authUrl()</error>
      <notice line="625" code="50013">Parameter $select_identifier could not be found in authUrl()</notice>
      <error line="709" code="50010">No DocBlock was found for method getAxAttributes()</error>
      <error line="756" code="50010">No DocBlock was found for method getSregAttributes()</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\thirdparty\WindowsLive\OAuthWrapHandler.php" hash="e3dd49b747cd99fd31fe997d3c06b203" package="Default">
    <class final="false" abstract="false" namespace="global" line="19" package="Default">
      <extends/>
      <name>OAuthWrapHandler</name>
      <full_name>\OAuthWrapHandler</full_name>
      <docblock line="4">
        <description><![CDATA[FILE:        OAuthWrapHandler.php]]></description>
        <long-description><![CDATA[<p>DESCRIPTION: Sample implementation of OAuth WRAP Authentication protocol.</p>

<p>VERSION:     1.1</p>

<p>Copyright (c) Microsoft Corporation. All rights reserved.</p>

<p>OAuthWrapHandler
This handler is used to both process the raw HTTP requests that generate the
required cookies for the Windows Live javascript control to work within a
php applicaiton.</p>]]></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="21" package="Default">
        <name>ProcessRequest</name>
        <full_name>ProcessRequest</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="Default">
        <name>ExpireCookies</name>
        <full_name>ExpireCookies</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="61" package="Default">
        <name>setAuthCookies</name>
        <full_name>setAuthCookies</full_name>
        <argument line="61">
          <name>$cookies</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="71" package="Default">
        <name>convertParamsToCookies</name>
        <full_name>convertParamsToCookies</full_name>
        <argument line="71">
          <name>$array</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="109" package="Default">
        <name>getAuthorizationToken</name>
        <full_name>getAuthorizationToken</full_name>
        <argument line="109">
          <name>$authUrl</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="109">
          <name>$appId</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="109">
          <name>$appSecret</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="109">
          <name>$callbackUrl</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="109">
          <name>$verificationCode</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="119" package="Default">
        <name>postWRAPRequest</name>
        <full_name>postWRAPRequest</full_name>
        <argument line="119">
          <name>$posturl</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="119">
          <name>$postvars</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="134" package="Default">
        <name>parseWRAPResponse</name>
        <full_name>parseWRAPResponse</full_name>
        <argument line="134">
          <name>$response</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="157" package="Default">
        <name>GET</name>
        <full_name>GET</full_name>
        <argument line="157">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="157">
          <name>$params</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
        <argument line="157">
          <name>$auth</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="186" package="Default">
        <name>MakeUrl</name>
        <full_name>MakeUrl</full_name>
        <argument line="186">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="186">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\thirdparty\WindowsLive\OAuthWrapHandler.php</error>
      <error line="21" code="50010">No DocBlock was found for method ProcessRequest()</error>
      <error line="49" code="50010">No DocBlock was found for method ExpireCookies()</error>
      <error line="61" code="50010">No DocBlock was found for method setAuthCookies()</error>
      <error line="71" code="50010">No DocBlock was found for method convertParamsToCookies()</error>
      <error line="109" code="50010">No DocBlock was found for method getAuthorizationToken()</error>
      <error line="119" code="50010">No DocBlock was found for method postWRAPRequest()</error>
      <error line="134" code="50010">No DocBlock was found for method parseWRAPResponse()</error>
      <error line="157" code="50010">No DocBlock was found for method GET()</error>
      <error line="186" code="50010">No DocBlock was found for method MakeUrl()</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\User.php" hash="e3ed992eb19eab3058ffb51acc346fe5" package="Default">
    <class final="false" abstract="false" namespace="global" line="11" package="Default">
      <extends/>
      <name>Hybrid_User</name>
      <full_name>\Hybrid_User</full_name>
      <docblock line="8">
        <description><![CDATA[The Hybrid_User class represents the current loggedin user]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
      <property final="false" static="false" visibility="public" line="14" namespace="global" package="Default">
        <name>$providerId</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="17" namespace="global" package="Default">
        <name>$timestamp</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="20" namespace="global" package="Default">
        <name>$profile</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="25" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="22">
          <description><![CDATA[inisialize the user object,]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\User.php</error>
      <error line="14" code="50018">No DocBlock was found for property $providerId</error>
      <error line="17" code="50018">No DocBlock was found for property $timestamp</error>
      <error line="20" code="50018">No DocBlock was found for property $profile</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\User_Activity.php" hash="86f092a15ae3bfa9beda46ce5405346c" package="Default">
    <class final="false" abstract="false" namespace="global" line="15" package="Default">
      <extends/>
      <name>Hybrid_User_Activity</name>
      <full_name>\Hybrid_User_Activity</full_name>
      <docblock line="8">
        <description><![CDATA[Hybrid_User_Activity]]></description>
        <long-description><![CDATA[<p>used to provider the connected user activity stream on a standardized structure across supported social apis.</p>

<p>http://hybridauth.sourceforge.net/userguide/Profile_Data_User_Activity.html</p>]]></long-description>
      </docblock>
      <property final="false" static="false" visibility="public" line="18" namespace="global" package="Default">
        <name>$id</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="21" namespace="global" package="Default">
        <name>$date</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="24" namespace="global" package="Default">
        <name>$text</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="27" namespace="global" package="Default">
        <name>$user</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="29" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\User_Activity.php</error>
      <error line="18" code="50018">No DocBlock was found for property $id</error>
      <error line="21" code="50018">No DocBlock was found for property $date</error>
      <error line="24" code="50018">No DocBlock was found for property $text</error>
      <error line="27" code="50018">No DocBlock was found for property $user</error>
      <error line="29" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\User_Contact.php" hash="18f3edf2c0167c58f0807d980a65e810" package="Default">
    <class final="false" abstract="false" namespace="global" line="15" package="Default">
      <extends/>
      <name>Hybrid_User_Contact</name>
      <full_name>\Hybrid_User_Contact</full_name>
      <docblock line="8">
        <description><![CDATA[Hybrid_User_Contact]]></description>
        <long-description><![CDATA[<p>used to provider the connected user contacts list on a standardized structure across supported social apis.</p>

<p>http://hybridauth.sourceforge.net/userguide/Profile_Data_User_Contacts.html</p>]]></long-description>
      </docblock>
      <property final="false" static="false" visibility="public" line="18" namespace="global" package="Default">
        <name>$identifier</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="21" namespace="global" package="Default">
        <name>$webSiteURL</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="24" namespace="global" package="Default">
        <name>$profileURL</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="27" namespace="global" package="Default">
        <name>$photoURL</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="30" namespace="global" package="Default">
        <name>$displayName</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$description</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="36" namespace="global" package="Default">
        <name>$email</name>
        <default><![CDATA[NULL]]></default>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\User_Contact.php</error>
      <error line="18" code="50018">No DocBlock was found for property $identifier</error>
      <error line="21" code="50018">No DocBlock was found for property $webSiteURL</error>
      <error line="24" code="50018">No DocBlock was found for property $profileURL</error>
      <error line="27" code="50018">No DocBlock was found for property $photoURL</error>
      <error line="30" code="50018">No DocBlock was found for property $displayName</error>
      <error line="33" code="50018">No DocBlock was found for property $description</error>
      <error line="36" code="50018">No DocBlock was found for property $email</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\Hybrid\User_Profile.php" hash="3873c102b38e929ef9a6d96c4ad3ff67" package="Default">
    <class final="false" abstract="false" namespace="global" line="17" package="Default">
      <extends/>
      <name>Hybrid_User_Profile</name>
      <full_name>\Hybrid_User_Profile</full_name>
      <docblock line="8">
        <description><![CDATA[Hybrid_User_Profile object represents the current logged in user profile.]]></description>
        <long-description><![CDATA[<p>The list of fields available in the normalized user profile structure used by HybridAuth.</p>

<p>The Hybrid_User_Profile object is populated with as much information about the user as
HybridAuth was able to pull from the given API or authentication provider.</p>

<p>http://hybridauth.sourceforge.net/userguide/Profile_Data_User_Profile.html</p>]]></long-description>
      </docblock>
      <property final="false" static="false" visibility="public" line="20" namespace="global" package="Default">
        <name>$identifier</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="23" namespace="global" package="Default">
        <name>$webSiteURL</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$profileURL</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="29" namespace="global" package="Default">
        <name>$photoURL</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="32" namespace="global" package="Default">
        <name>$displayName</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="35" namespace="global" package="Default">
        <name>$description</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="38" namespace="global" package="Default">
        <name>$firstName</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="41" namespace="global" package="Default">
        <name>$lastName</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="44" namespace="global" package="Default">
        <name>$gender</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="47" namespace="global" package="Default">
        <name>$language</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="50" namespace="global" package="Default">
        <name>$age</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="53" namespace="global" package="Default">
        <name>$birthDay</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="56" namespace="global" package="Default">
        <name>$birthMonth</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="59" namespace="global" package="Default">
        <name>$birthYear</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="62" namespace="global" package="Default">
        <name>$email</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="65" namespace="global" package="Default">
        <name>$emailVerified</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="68" namespace="global" package="Default">
        <name>$phone</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="71" namespace="global" package="Default">
        <name>$address</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="74" namespace="global" package="Default">
        <name>$country</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="77" namespace="global" package="Default">
        <name>$region</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="public" line="80" namespace="global" package="Default">
        <name>$city</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="79">
          <description><![CDATA[city]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="83" namespace="global" package="Default">
        <name>$zip</name>
        <default><![CDATA[NULL]]></default>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\Hybrid\User_Profile.php</error>
      <error line="20" code="50018">No DocBlock was found for property $identifier</error>
      <error line="23" code="50018">No DocBlock was found for property $webSiteURL</error>
      <error line="26" code="50018">No DocBlock was found for property $profileURL</error>
      <error line="29" code="50018">No DocBlock was found for property $photoURL</error>
      <error line="32" code="50018">No DocBlock was found for property $displayName</error>
      <error line="35" code="50018">No DocBlock was found for property $description</error>
      <error line="38" code="50018">No DocBlock was found for property $firstName</error>
      <error line="41" code="50018">No DocBlock was found for property $lastName</error>
      <error line="44" code="50018">No DocBlock was found for property $gender</error>
      <error line="47" code="50018">No DocBlock was found for property $language</error>
      <error line="50" code="50018">No DocBlock was found for property $age</error>
      <error line="53" code="50018">No DocBlock was found for property $birthDay</error>
      <error line="56" code="50018">No DocBlock was found for property $birthMonth</error>
      <error line="59" code="50018">No DocBlock was found for property $birthYear</error>
      <error line="62" code="50018">No DocBlock was found for property $email</error>
      <error line="65" code="50018">No DocBlock was found for property $emailVerified</error>
      <error line="68" code="50018">No DocBlock was found for property $phone</error>
      <error line="71" code="50018">No DocBlock was found for property $address</error>
      <error line="74" code="50018">No DocBlock was found for property $country</error>
      <error line="77" code="50018">No DocBlock was found for property $region</error>
      <error line="83" code="50018">No DocBlock was found for property $zip</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\index.php" hash="dd757cfa0d1e1828dfeb0282cb775368" package="Default">
    <include line="12" type="Require Once" package="Default">
      <name>Hybrid/Auth.php</name>
    </include>
    <include line="13" type="Require Once" package="Default">
      <name>Hybrid/Endpoint.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\index.php</error>
    </parse_markers>
  </file>
  <file path="lib\hybridauth\install_old.php" hash="4119eac1190af1b352fdd03b3d9412e0" package="Default">
    <function namespace="global" line="79" package="Default">
      <name>getCurrentUrl</name>
      <full_name>\getCurrentUrl</full_name>
      <docblock line="76">
        <description><![CDATA[Utility function, return the current url]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file lib\hybridauth\install_old.php</error>
    </parse_markers>
  </file>
  <file path="rede.php" hash="a6e116458c904796f2bf5e1f67f11369" package="Default">
    <include line="5" type="Require Once" package="Default">
      <name/>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file rede.php</error>
    </parse_markers>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="classpackage" full_name="classpackage"/>
  <namespace name="app" full_name="app">
    <namespace name="lib" full_name="app\lib">
      <namespace name="ecomm" full_name="app\lib\ecomm"/>
    </namespace>
  </namespace>
  <namespace name="global" full_name="global"/>
  <marker count="1">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="2"/>
</project>
